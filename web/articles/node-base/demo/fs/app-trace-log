[2018-09-30T17:27:57.570] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:28:54.216] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T17:32:59.160] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-09-30T17:33:07.950] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:33:08.316] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:33:08.770] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T17:33:15.163] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:34:11.865] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:34:30.124] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:34:31.444] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:34:37.293] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:35:36.375] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:36:59.291] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:37:55.989] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:41:55.784] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:42:12.282] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T17:42:13.777] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T17:42:15.760] [TRACE] default - API request, URL:/api/users/signout, method:POST, body:{}
[2018-09-30T17:42:16.531] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T20:17:11.562] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:20.047] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:21.253] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T20:17:23.582] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:24.348] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T20:17:27.042] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:31.645] [TRACE] default - API request, URL:/api/users/signout, method:POST, body:{}
[2018-09-30T20:17:31.673] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:32.458] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T20:17:34.696] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:35.410] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T20:17:38.906] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-09-30T20:17:43.212] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:44.573] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-09-30T20:17:44.621] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-09-30T20:17:48.380] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:17:53.446] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:23:26.624] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-09-30T20:23:26.671] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-09-30T20:23:36.184] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T20:23:41.249] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-09-30T20:23:41.288] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-09-30T20:23:42.435] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:49:16.074] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:49:17.324] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:49:20.781] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-09-30T21:49:20.782] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-09-30T21:49:40.687] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:49:42.282] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:49:44.793] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-09-30T21:50:09.900] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:50:12.501] [TRACE] default - API request, URL:/api/articles/5baedd01f44d1d66e4b0ee40, method:GET, body:{}
[2018-09-30T21:50:15.924] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:52:18.936] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:52:25.683] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-09-30T21:52:29.319] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-09-30T21:52:30.750] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-01T20:26:52.444] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-01T20:26:54.173] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-01T20:27:00.184] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-01T20:27:26.050] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-01T20:28:32.125] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-01T20:28:32.236] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-01T20:28:44.195] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:POST, body:{"mdContent":"# Markdown 语法示例\n\n> 有什么方法可以快速写出 80 分的文档吗？如果有那一定是 markdown 了。markdown 通过给标签指定样式，不需要像 word 那样需要选中再点来点去，markdown 的全部输入都通过键盘来完成，没有鼠标什么事，安心的写内容，不需要担心格式，最后输出干净简单的文档。\n\n## 二级标题\n\nmarkdown中，一级标题被定义为文章标题，二级标题是内容中最大的标题。\n\n### 三级标题\n\n同理，三个井号定义三级标题，一般小篇幅的文章(万字以下)，这两级内容标题就够用了。\n\n### 段落内样式\n\n还有一些文字技巧：\n\n**加粗**，一些想重点强调的地方可以加粗。\n\n`引用或专有名词`，如果是一个新概念，用明确的标识可以降低阅读难度。\n\n### 块级样式\n\n最常用的是列表，无数字列表：\n\n- 第一项\n- 第二项\n\n有数字列表\n\n1. 第一项\n2. 第二项\n\n作为码农代码块是少不了的：\n\n```js\nconsole.log('hello world');\n```\n\n或许你还需要一个表格\n\n表头一          | 表头二            | 表头三\n------------ | ------------- | ------------\n单元格          | 单元格            | 单元格          \n单元格          | 单元格            | 单元格          \n\n最后你也许想引入一张图片：\n![](/upload-files/upload_a91ac9a3474da6afba8ba1696c78317f.jpeg)\n\n## 参考\n\nhttps://en.wikipedia.org/wiki/Markdown\n","tags":["推荐","个人笔记"]}
[2018-10-01T20:28:44.196] [TRACE] default - auth userRequired, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:POST
[2018-10-01T20:28:56.638] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-01T20:28:57.182] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-01T20:28:59.758] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-10-01T20:28:59.791] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-01T20:29:00.060] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-01T20:29:01.334] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-01T20:29:01.386] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-01T20:29:08.586] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:POST, body:{"mdContent":"# Markdown 语法示例\n\n> 有什么方法可以快速写出 80 分的文档吗？如果有那一定是 markdown 了。markdown 通过给标签指定样式，不需要像 word 那样需要选中再点来点去，markdown 的全部输入都通过键盘来完成，没有鼠标什么事，安心的写内容，不需要担心格式，最后输出干净简单的文档。\n\n## 二级标题\n\nmarkdown中，一级标题被定义为文章标题，二级标题是内容中最大的标题。\n\n### 三级标题\n\n同理，三个井号定义三级标题，一般小篇幅的文章(万字以下)，这两级内容标题就够用了。\n\n### 段落内样式\n\n还有一些文字技巧：\n\n**加粗**，一些想重点强调的地方可以加粗。\n\n`引用或专有名词`，如果是一个新概念，用明确的标识可以降低阅读难度。\n\n### 块级样式\n\n最常用的是列表，无数字列表：\n\n- 第一项\n- 第二项\n\n有数字列表\n\n1. 第一项\n2. 第二项\n\n作为码农代码块是少不了的：\n\n```js\nconsole.log('hello world');\n```\n\n或许你还需要一个表格\n\n表头一          | 表头二            | 表头三\n------------ | ------------- | ------------\n单元格          | 单元格            | 单元格          \n单元格          | 单元格            | 单元格          \n\n最后你也许想引入一张图片：\n![](/upload-files/upload_a91ac9a3474da6afba8ba1696c78317f.jpeg)\n\n## 参考\n\nhttps://en.wikipedia.org/wiki/Markdown\n","tags":["推荐","个人笔记"]}
[2018-10-01T20:29:08.586] [TRACE] default - auth userRequired, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:POST
[2018-10-01T20:29:13.658] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-01T20:29:16.986] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-01T20:29:20.556] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-03T21:11:32.257] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-03T21:13:02.470] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:13:03.491] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:13:38.220] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:13:40.686] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:15:30.201] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:15:30.613] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:16:40.183] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:16:40.987] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:16:43.870] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:18:25.716] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:18:26.646] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:21:15.309] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:21:15.939] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:21:24.141] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:21:58.095] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:21:59.041] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:26:51.197] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:27:51.375] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:32:02.221] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:33:16.279] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:33:27.617] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:33:54.984] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:34:03.136] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:34:35.839] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:40:12.152] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:41:19.827] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:42:06.118] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:45:35.952] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:45:38.187] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T21:48:56.167] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:06:13.976] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:10:06.958] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:11:08.212] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:11:48.295] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:11:55.820] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:12:05.679] [TRACE] default - API request, URL:/api/articles/reverse, method:GET, body:{}
[2018-10-03T22:12:11.615] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:12:58.033] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:24:21.874] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:24:49.025] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:24:52.054] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:25:28.740] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:28:20.366] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:29:30.914] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:48:27.412] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:49:53.210] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:50:35.602] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-03T22:50:52.453] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T22:48:57.173] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T22:49:07.089] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T22:50:29.736] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T22:50:55.499] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T22:53:16.609] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T22:53:17.157] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:01:35.586] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:05:35.220] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:05:50.978] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:05:55.666] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:06:25.843] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:07:14.071] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:07:15.568] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:08:29.698] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:08:56.241] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:09:22.838] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:09:31.112] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:09:40.587] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:09:46.520] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:10:49.475] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:12:44.423] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:12:58.739] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:15:12.394] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:15:50.574] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:18:17.995] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:18:29.223] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:19:25.080] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:21:46.315] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:21:49.213] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:25:01.811] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:25:47.179] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:25:52.045] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:26:05.733] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:30:00.899] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:30:07.362] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-05T23:33:19.941] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-10-14T21:55:28.793] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-14T21:55:38.843] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-15T21:46:27.437] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:45:22.822] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:47:01.241] [TRACE] default - API request, URL:/api/articles/5baedd01f44d1d66e4b0ee40, method:GET, body:{}
[2018-10-16T11:48:57.150] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:49:02.880] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:49:03.288] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-16T11:49:11.491] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-10-16T11:49:11.528] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:49:11.786] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-16T11:49:15.841] [TRACE] default - API request, URL:/api/articles/5baedd01f44d1d66e4b0ee40, method:GET, body:{}
[2018-10-16T11:49:26.389] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:49:26.471] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-16T11:53:13.056] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:53:13.508] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-16T11:53:16.379] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-16T11:53:16.453] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-16T11:53:18.768] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:53:21.299] [TRACE] default - API request, URL:/api/articles/5baedd01f44d1d66e4b0ee40, method:GET, body:{}
[2018-10-16T11:53:21.348] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-16T11:53:30.559] [TRACE] default - API request, URL:/api/articles/5baedd01f44d1d66e4b0ee40, method:POST, body:{"mdContent":"# 记录自己的和别人的只言片语\n\n> 记录一些简短的东西，这些东西作为单独的一篇内容太单薄，但是放弃又太可惜，收录在这里。\n\n## 项目的成功\n\n前端圈子，甚至是码农圈子里，有个怪现象：一个项目成功，就总会有一群人追着问/宣传“用XXX（语言/框架/库）做的”。仿佛一个项目的成功并不是它自身的成功，而是XXX（语言/框架/库）的成功似的。\n\n---- 司徒正美(2015.10.08 10:16)\n\n##  model - module\n\nmodel: 模型，MVC 的数据部分\n\nmodule: 模块，一个项目的拆分单元\n\n## 码农 高工 CTO\n\n- 总监，干活儿领域的最高层，项目 Leader 和 CTO 是这个职位常用的头衔\n- 高工，战斗在二线，封装组件装配工具\n- 码农，战斗在一线，在高工的工作成果上完成业务需求\n\n三种职位的人工作中会有重叠。高工与上下都有重叠，努力与上面的重合多一点，这会带来两个好处：更快的进入上一层，更好的完成本层工作。高工用最少的时间进入上一层不一定是好事，大公司的 CTO 和小公司的 CTO 在职责和收益上会差很多，而且小公司的 CTO 或 项目 Leader 进入大公司甚至会降为高工，如果在做管理的时候把技术放下了(至少管理会占用你一部分研究技术的时间)那么回头再来写代码与一直代码为主相比就有点走弯路了，更可悲的是小公司 CTO 想要升级为大公司 CTO，降级再升级基本是一条必经之路。如果你的目标不太高，没有年薪百万的梦想，或者想投机，没有打算在技术这条路上走很长久，高工直接转总监收入上会有很大的提升。\n\n再说说码农，码农是在高工的工作成果上完成总监下达的任务。大多数小公司没有高工，比新手做东西干活儿快一点靠谱一点大部分时间在写业务相关代码的人我认为不能称之为高工。对成本和收益的权衡成为多数小公司和大公司的很多部门放弃独立拥有高工的决策。但是码农工作需要在高工的成果上进行，否则回到刀耕火种的开发模式效率和质量实在太低。其实码工用的高工成果很大程度上是相同的，从 IDE 和 SVN 这些基础工具 到 Gulp 和 Webpack 这些工程化工具 再到 Angular 和 Bootstrap 这些好用的框架和库。这些通用技术能满足企业发展初期的大部分需求，当企业发展到一定程度和规模，就要逼迫码农升级为高工了，将社会上其他高工的东西进行定制化的整合，工具自身的业务需求可能还需要一些创造。所以码农在使用这些高工成果时要研究的透彻一些，任何一个工具都有优缺点，学会那些有点能让你事半功倍，记住那些缺点能减少你的掉坑次数。多积累一些东西，观千剑而后识器，然匠者造器。\n\n至于总监，我还没做到那个位置，这里不敢妄言...\n\n想到一些词句对应这三个职位：\n\n- 码农：凡操千曲后晓声，观千剑而后识器；故圆照之象，务先博观。\n- 高工：匠者造器，剑指四方，谁与争锋。\n- 总监：良辰美景奈何天，为谁辛苦为谁甜。\n\n总监的收入在别人看来已经很不菲了，但是毕竟公司不是自己的，招人管人选技术方向，一切的所作所为都是为了别人的目标而努力。与老板和股东比起来，总监的收入真是太微不足道了，但是就是这点与整个公司的收益相比微不足道的这一部分足以支撑很多家庭的富足生活。所以还是乐观一点吧，虽然你成就了别人，但别人也不是成就了你吗，生活还得向上蹦跶，加油！\n\n---- 清明节加班有感(2016.04.03 23:50)\n\n## 呆伯特法则\n\n呆伯特法则（Dilbert's Law）意指 1990 年代一个讽刺意味的观察，认为公司都倾向有系统地把工作能力最差的员工提升到管理层，以把他们能对公司造成的损害减至最低。\n\n[出处](http://mp.weixin.qq.com/s?__biz=MzA5NDY0ODkxNA==&mid=402473027&idx=1&sn=0887668e2dba101d4a2c100f077b27c9&scene=2&srcid=0403mA7a8yzttAkI0X0C242z&from=timeline&isappinstalled=0#wechat_redirect)\n\n## 参数定义\n\n- 以 `is` 开头，表示布尔设置\n- 以 `on` 开头，表示事件的回调函数\n- 以 `before` 和 `after` 表示事件执行前后，这时你有可能需要覆写默认事件，注意提供默认事件本身和参数\n\n## 基础建设\n\n其实相对于规范、脚手架、公共组件落地后对团队开发效率的提升，我更关注这些事情一步一步落地的过程，并且团队的每个人都能参与其中，以此了解为什么要做这些事情！为什么最终如此制定！了解如何参与大团队协作开发中的版本管理、开发流程和 review 机制！另外，架构师绝不是闷头帮你把基础设施建设完毕的人，而应该是提供思路制定规范推动大家一起做技术演进的那群人，想好一个角色的定位很重要。\n\n---- 芋头微博(2016.08.01)\n\n## 关于加班\n\n反对无条件无限度加班，反对用加班粉饰决策流程上出的问题。\n\n按时上线就万事大吉，产生加班的原因是不是应该事后总结一下，是工时估的有问题，是开发者上班看新闻了，还是某位开发者工作没做到位影响了其他人的进度，还是领导拍的上线时间不加班就不可能完成。\n\n没人愿意被动加班，被动加班也是一种意外，影响工程质量，影响团队稳定。\n\n每次出现被动加班我都希望项目的所有参与者自审一下，造成加班的原因究竟是什么，下次能否不加班顺利完成项目。\n\n## 关于项目的定位\n\n在职业发展中不管是公司晋升还是提高江湖地位，选择一个好的项目 --- 给要做的项目一个好的定位实在是太重要了，这几年做残过几个项目，总结几点吧：\n\n大众产品：分清人和机器擅长的部分，用程序把它们分开；\n\n辅助产品：分清程序和程序员擅长的部分，给程序员留出的空间宁多勿少；\n\n---- 有感于多模版 ipage 报表平台(2016.08.01)\n\n## 排期\n\n主动给排期可以掌握主动优势，自己先有一份 todo 清单自己心理上会自信不焦虑，给别人也是一种靠谱的感觉。\n\n---- 有感于多模版迭代总结会(2016.11.24)\n\n## 技术先进性 \n\n留出 20% 的时间做一些探索性的事情，经理支持找一些项目来作为新技术的探索，这可能是百度的技术还被外面认可的原因。百度这家公司的技术基因表现出的外在作用让行业得到了认可。\n\n---- 有感于前端技术分享会(2016.11.24)\n\n## 关于造轮子的一点感悟\n\n世间存在这么一种轮子：“我实现你一个子集，我比你小，我厉害”，“更轻量级，某某库核心功能定制版”。早先年网络环境不太好没有包管理工具的年代这种轮子确实有一定的存在价值，现在的一种比较好的设计是只提供核心功能，周边功能通过插件来实现，这是一种减法。如果我只有核心，那么新轮子不可能比这个更小(或者做到比当前库小很多比较困难)。也是一种加法，通过插件的形式拥有无限多的功能，从而形成一种生态很难被颠覆。\n\n---- 2017.05.16\n\n## 关于撕逼\n\n为什么要撕逼？首先现在的工作方式是合作，不是员工给老板打工。如果老板对技术不太看重很可能会做出错误的决策，作为技术人员有必要从专业角度提一些意见。因为公司的成败与我们自己相关，技术方案的使用与我们的职业发展相关，在一家公司待 3 年的收获不能只是 36 个月的工资，要做出能拿的出手的产品，要获得能够升职加薪的技能。如果老板阻碍了我们的目标，那只能愤而开撕了，下面是自己总结的几点经验，撕逼要有大局观才能撕的赢：\n\n用户整体体验：为了一小部分用户降低整体体验是不明智的，点：浏览器统计数据，动画流畅度，CSS3等；\n\n公司战略：产品是想原地不动还是想越来越好，支持IE7会对产品产生局限，现在竞争这么激烈你给我们发放大刀长矛怎么和人家的机关枪干仗；\n\n技术团队：如果我们用老技术，技术团队招不到牛人，留不下优秀的人，一堆烂人还能指望做出什么好产品；\n\n开发成本：开发效率低，开源界不再提供技术支持，框架层面的 bug 都要自己修。\n\n---- 面对微信群的抱怨给出的反击策略(2017.10.11)\n\n## 你说说前端框架为什么越来越复杂\n\n最近接手了一个比较复杂的项目，项目的复杂点在于之前是各部门分别开发的，现在要做统一的战略调整，但是其他团队人员不足，需要我们出人在其他团队的基础上开发，而他们用的前端技术框架各不相同。然后苏先生就抛出这么个话题 -- “你说说前端框架为什么越来越复杂”。直接来复述苏先生的话：软件最开始是 CS 架构模式，这种模式的弱势是 UI 控制比较弱，当然也发展出一些解决方案(Swing/SWT)，但是还没发展成熟就被 BS 架构模式颠覆了，Java Web 大行其道，JSP 拼页面可是当时最盛行的技术，然后是 Web 2.0 的出现主要是为了解决操作的时候不断刷页面的不友好体验，但是有一个问题依然没有很好的解决，那就是“前端组件组件化”，尤其面临前后端耦合太重的问题，于是随着以 V8 和 NodeJS 为根基的一批框架和工具的出现，前端进入组件化时代，但是现在还不成熟，不成熟主要表现在两个方面，第一整个基础设施还不完善，需要很多工具来弥合这些缺陷(比如有的浏览器不支持ES6需要babel，不支持模块化需要 webpack)，第二是没有一个有明显优势的方案胜出来一统天下。\n\n--- 来自和互联网10多年从业老兵苏威的早餐聊天(2017.12.27)\n\n苏先生的Hi上有一句签名：实施必须敏捷，方案不能敏捷。\n\n## 软件构建的核心\n\n软件构建的核心就是控制复杂度。\n\n--- 代码大全(2018.01.11)\n\n## 关于联调\n\n联调就是后端不好好写单元测试与集成测试，让前端发请求调用以达到测试的目的；前端不好好写Mock和测试，让后端输出数据以达到测试的目的。\n\n联调是前后端一起见证靠谱的测试结果，尽早暴露前后端实现的问题。\n","tags":["个人笔记","思想","杂谈"]}
[2018-10-16T11:53:30.559] [TRACE] default - auth userRequired, URL:/api/articles/5baedd01f44d1d66e4b0ee40, method:POST
[2018-10-16T11:53:35.805] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T11:53:40.710] [TRACE] default - API request, URL:/api/articles/5baedd01f44d1d66e4b0ee40, method:GET, body:{}
[2018-10-16T11:53:48.247] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-16T11:53:50.943] [TRACE] default - API request, URL:/api/tags/5b96838b75df1871cdd8f153, method:GET, body:{}
[2018-10-16T11:53:58.872] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-16T11:54:00.342] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-10-16T11:54:00.342] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-10-16T11:54:00.344] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-10-16T11:54:12.856] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T12:03:10.930] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-10-16T12:03:10.931] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-10-16T12:03:10.940] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-10-16T12:03:20.974] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T12:03:25.598] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-16T12:30:20.806] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-16T12:32:40.891] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-10-18T21:23:35.912] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:36:03.360] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:36:06.191] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:38:11.846] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:38:15.009] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:38:16.131] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:41:09.218] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:51:11.054] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-18T21:56:27.890] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:38:04.669] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:50:10.010] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:50:14.182] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:50:15.789] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:50:28.932] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:50:29.661] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-19T22:56:24.667] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-10-19T22:56:24.737] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:56:25.359] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-19T22:56:26.893] [TRACE] default - API request, URL:/api/articles, method:POST, body:{}
[2018-10-19T22:56:26.894] [TRACE] default - auth userRequired, URL:/api/articles, method:POST
[2018-10-19T22:56:27.332] [TRACE] default - API request, URL:/api/articles/5bc9f09a119884b549ae17ce, method:GET, body:{}
[2018-10-19T22:59:44.784] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T22:59:45.232] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-19T22:59:51.569] [TRACE] default - API request, URL:/api/articles/5bc9f09a119884b549ae17ce, method:GET, body:{}
[2018-10-19T22:59:51.717] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-19T23:00:16.547] [TRACE] default - API request, URL:/api/articles/5bc9f09a119884b549ae17ce, method:POST, body:{"mdContent":"# W3C 标准成熟过程中的里程点\n\n> CSS 和 JS 都处在一个快速发展的阶段，不断有新特性加进来，想要知道哪些可用哪些还得等等再用，就需要知道这个特性在标准中的进行到哪一步了还有浏览器支持情况怎么样，这篇文章介绍一个特性成为标准都有哪几步，各步又是什么意思。\n\n## 标准的成熟过程\n\n> 按照W3C的过程文档，一个推荐标准的发展需要通过不同的成熟级别。\n\n### 工作草案（WD）Working Draft\n\n在工作草案这一级别，标准被发布出来，以得到社群的评审。工作草案文档是一个标准的首次公开发表。几乎任何人都可以发表评论，但是并没有承诺对发表的评论的内容采取行动。\n\n在这一阶段，标准文档很可能会发生重大的修改，这样，任何实现该工作草案的人应该做好准备：随着标准不断成熟，大量修改他们实现。\n\n### 最后公示 (LC) Last Call\n\n工作委员会(Working Group)向标准委员会(W3C groups)提交文稿并公示，最后的文稿必须满足下面三条：\n\n- 明确说明讨论截止日期\n- 得到所有被依赖的工作委员会的认可\n- 征求公开的审查\n\n这一阶段形成对一个问题可以自圆其说的解决方案，用于和其他解决方案 PK，目的是去掉一些相近的方案。\n\n### 候选推荐标准（CR）Candidate Recommendation\n\n候选推荐标准与工作草案相比更加稳定。此时，工作组负责使标准符合一个标准所需的要求。候选推荐标准的目的是获得开发社区在关于标准的可实现性方面的帮助。\n\n标准文档还可能发生进一步的修改，但此时重大的特性大部分已经锁定。这些特性的设计还是会根据实现者的反馈进行变更。\n\n### 提案推荐标准（PR）Proposed Recommendation\n\n提案推荐标准是标准经过了前两个级别的版本。上述标准的用户已经畅所欲言，标准的实现者也已经有机会给出了他们的观点。 在这一阶段，标准文档已经提交到W3C顾问委员会进行最后的批准。\n\n虽然这一步骤是重要的，但是这一阶段很少导致对标准的任何重要的修改。\n\n### W3C推荐标准（REC）\tRecommendation\n\n这是最成熟的发展阶段。这时，标准已经历了理论上和实际上的评审和测试，由W3C作签署，可以广泛应用。\n\n### 后续的修订\n\n推荐标准通过分别发布的勘误表来更新，当积累到足够的实质上的修订，会发布推荐标准的一个新版本，例如，XML推荐标准现在是第五版。\n\n## 参考网站\n\n[http://www.w3cplus.com/css3/autoprefixer-css-vender-prefixes.html](http://www.w3cplus.com/css3/autoprefixer-css-vender-prefixes.html)\n\n[http://www.w3cplus.com/blog/tags/470.html](http://www.w3cplus.com/blog/tags/470.html)\n\n[http://www.tuicool.com/articles/7bAFN37](http://www.tuicool.com/articles/7bAFN37)\n","tags":[]}
[2018-10-19T23:00:16.547] [TRACE] default - auth userRequired, URL:/api/articles/5bc9f09a119884b549ae17ce, method:POST
[2018-10-19T23:00:20.548] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T23:00:49.548] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-19T23:00:56.934] [TRACE] default - API request, URL:/api/articles/5bc9f09a119884b549ae17ce, method:GET, body:{}
[2018-10-19T23:01:00.574] [TRACE] default - API request, URL:/api/articles/5bc9f09a119884b549ae17ce, method:GET, body:{}
[2018-10-19T23:01:00.613] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-19T23:01:26.792] [TRACE] default - API request, URL:/api/articles/5bc9f09a119884b549ae17ce, method:POST, body:{"mdContent":"# W3C 标准成熟过程中的里程点\n\n> CSS 和 JS 都处在一个快速发展的阶段，不断有新特性加进来，想要知道哪些可用哪些还得等等再用，就需要知道这个特性在标准中的进行到哪一步了还有浏览器支持情况怎么样，这篇文章介绍一个特性成为标准都有哪几步，各步又是什么意思。\n\n## 标准的成熟过程\n\n> 按照W3C的过程文档，一个推荐标准的发展需要通过不同的成熟级别。\n\n### 工作草案（WD）Working Draft\n\n在工作草案这一级别，标准被发布出来，以得到社群的评审。工作草案文档是一个标准的首次公开发表。几乎任何人都可以发表评论，但是并没有承诺对发表的评论的内容采取行动。\n\n在这一阶段，标准文档很可能会发生重大的修改，这样，任何实现该工作草案的人应该做好准备：随着标准不断成熟，大量修改他们实现。\n\n### 最后公示 (LC) Last Call\n\n工作委员会(Working Group)向标准委员会(W3C groups)提交文稿并公示，最后的文稿必须满足下面三条：\n\n- 明确说明讨论截止日期\n- 得到所有被依赖的工作委员会的认可\n- 征求公开的审查\n\n这一阶段形成对一个问题可以自圆其说的解决方案，用于和其他解决方案 PK，目的是去掉一些相近的方案。\n\n### 候选推荐标准（CR）Candidate Recommendation\n\n候选推荐标准与工作草案相比更加稳定。此时，工作组负责使标准符合一个标准所需的要求。候选推荐标准的目的是获得开发社区在关于标准的可实现性方面的帮助。\n\n标准文档还可能发生进一步的修改，但此时重大的特性大部分已经锁定。这些特性的设计还是会根据实现者的反馈进行变更。\n\n### 提案推荐标准（PR）Proposed Recommendation\n\n提案推荐标准是标准经过了前两个级别的版本。上述标准的用户已经畅所欲言，标准的实现者也已经有机会给出了他们的观点。 在这一阶段，标准文档已经提交到W3C顾问委员会进行最后的批准。\n\n虽然这一步骤是重要的，但是这一阶段很少导致对标准的任何重要的修改。\n\n### W3C推荐标准（REC）\tRecommendation\n\n这是最成熟的发展阶段。这时，标准已经历了理论上和实际上的评审和测试，由W3C作签署，可以广泛应用。\n\n### 后续的修订\n\n推荐标准通过分别发布的勘误表来更新，当积累到足够的实质上的修订，会发布推荐标准的一个新版本，例如，XML推荐标准现在是第五版。\n\n## 参考网站\n\n[http://www.w3cplus.com/css3/autoprefixer-css-vender-prefixes.html](http://www.w3cplus.com/css3/autoprefixer-css-vender-prefixes.html)\n\n[http://www.w3cplus.com/blog/tags/470.html](http://www.w3cplus.com/blog/tags/470.html)\n\n[http://www.tuicool.com/articles/7bAFN37](http://www.tuicool.com/articles/7bAFN37)\n","tags":["规范","杂谈"]}
[2018-10-19T23:01:26.793] [TRACE] default - auth userRequired, URL:/api/articles/5bc9f09a119884b549ae17ce, method:POST
[2018-10-19T23:01:30.738] [TRACE] default - API request, URL:/api/articles/5bc9f09a119884b549ae17ce, method:GET, body:{}
[2018-10-19T23:01:33.813] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-20T22:48:09.745] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-20T22:48:10.277] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-20T22:48:13.674] [TRACE] default - API request, URL:/api/articles, method:POST, body:{}
[2018-10-20T22:48:13.676] [TRACE] default - auth userRequired, URL:/api/articles, method:POST
[2018-10-20T22:48:14.016] [TRACE] default - API request, URL:/api/articles/5bcb402da85b15baf6651e9d, method:GET, body:{}
[2018-10-20T22:48:14.055] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-20T22:49:06.446] [TRACE] default - API request, URL:/api/articles/5bcb402da85b15baf6651e9d, method:POST, body:{"mdContent":"# 语义化版本\n\n> 版本管理是软件开发和发布中一个非常重要部分，混乱的版本会大大的缩短一个软件的寿命。我终于有幸看到这篇文章来讲述“语义化版本控制的规范”，作者是Tom Preston-Werner(Gravatars 创办者, GitHub 共同创办者)，这些规则是根据（但不局限于）已经被各种封闭、开放源码软件所广泛使用的惯例所设计，为叙述方便，下面以作者作为第一人称来叙述这套规范。\n\n## 摘要\n\n版本格式：主版本号.次版本号.修订号，版本号递增规则如下：\n  \n- 主版本号：当你做了不兼容的 API 修改，\n- 次版本号：当你做了向下兼容的功能性新增，\n- 修订号：当你做了向下兼容的问题修正。\n\n先行版本号及版本编译信息可以加到“主版本号.次版本号.修订号”的后面，作为延伸。\n## 简介\n\n在软件管理的领域里存在着被称作“依赖地狱”的死亡之谷，系统规模越大，加入的套件越多，你就越有可能在未来的某一天发现自己已深陷绝望之中。\n\n在依赖高的系统中发布新版本套件可能很快会成为恶梦。如果依赖关系过高，可能面临版本控制被锁死的风险（必须对每一个相依套件改版才能完成某次升级）。而如果依赖关系过于松散，又将无法避免版本的混乱（假设兼容于未来的多个版本已超出了合理数量）。当你专案的进展因为版本相依被锁死或版本混乱变得不够简便和可靠，就意味着你正处于依赖地狱之中。\n\n作为这个问题的解决方案之一，我提议用一组简单的规则及条件来约束版本号的配置和增长。这些规则是根据（但不局限于）已经被各种封闭、开放源码软件所广泛使用的惯例所设计。为了让这套理论运作，你必须先有定义好的公共 API 。这可以透过文件定义或代码强制要求来实现。无论如何，这套 API 的清楚明了是十分重要的。一旦你定义了公共 API，你就可以透过修改相应的版本号来向大家说明你的修改。考虑使用这样的版本号格式：XYZ （主版本号.次版本号.修订号）修复问题但不影响API 时，递增修订号；API 保持向下兼容的新增及修改时，递增次版本号；进行不向下兼容的修改时，递增主版本号。\n\n我称这套系统为“语义化的版本控制”，在这套约定下，版本号及其更新方式包含了相邻版本间的底层代码和修改内容的信息。\n\n## 语义化版本控制规范\n\n以下关键词 MUST、MUST NOT、REQUIRED、SHALL、SHALL NOT、SHOULD、SHOULD NOT、 RECOMMENDED、MAY、OPTIONAL 依照 RFC 2119 的叙述解读。（译注：为了保持语句顺畅， 以下文件遇到的关键词将依照整句语义进行翻译，在此先不进行个别翻译。）\n\n1.使用语义化版本控制的软件“必须 MUST ”定义公共 API。该 API 可以在代码中被定义或出现于严谨的文件内。无论何种形式都应该力求精确且完整。\n\n2.标准的版本号“必须 MUST ”采用 XYZ 的格式，​​ 其中 X、Y 和 Z 为非负的整数，且“禁止 MUST NOT”在数字前方补零。X 是主版本号、Y 是次版本号、而 Z 为修订号。每个元素“必须 MUST ”以数值来递增。例如：1.9.1 -> 1.10.0 -> 1.11.0。\n\n3.标记版本号的软件发行后，“禁止 MUST NOT ”改变该版本软件的内容。任何修改都“必须 MUST ”以新版本发行。\n\n4.主版本号为零（0.y.z）的软件处于开发初始阶段，一切都可能随时被改变。这样的公共 API 不应该被视为稳定版。\n\n5.1.0.0 的版本号用于界定公共 API 的形成。这一版本之后所有的版本号更新都基于公共 API 及其修改内容。\n\n6.修订号 Z（x.y.Z\tx > 0）“必须 MUST ”在只做了向下兼容的修正时才递增。这里的修正指的是针对不正确结果而进行的内部修改。\n\n7.次版本号 Y（x.Y.z，\tx > 0）“必须 MUST ”在有向下兼容的新功能出现时递增。在任何公共 API 的功能被标记为弃用时也“必须 MUST ”递增。也“可以 MAY ”在内部程序有大量新功能或改进被加入时递增，其中“可以 MAY ”包括修订级别的改变。每当次版本号递增时，修订号“必须 MUST ”归零。\n\n8.主版本号 X（X.y.z\tX > 0）“必须 MUST ”在有任何不兼容的修改被加入公共 API 时递增。其中“可以 MAY ”包括次版本号及修订级别的改变。每当主版本号递增时，次版本号和修订号“必须 MUST ”归零。\n\n9.先行版本号“可以 MAY ”被标注在修订版之后，先加上一个连接号再加上一连串以句点分隔的标识符号来修饰。标识符号“必须 MUST ”由 ASCII 码的英数字和连接号 [0-9A-Za-z-] 组成，且“禁止 MUST NOT ”留白。数字型的标识符号“禁止 MUST NOT ”在前方补零。先行版的优先级低于相关联的标准版本。被标上先行版本号则表示这个版本并非稳定而且可能无法达到兼容的需求。范例：1.0​​.0-alpha、1.0.0-alpha.1、1.0.0-0.3.7、1.0.0-x.7.z.92。\n\n10.版本编译信息“可以 MAY ”被标注在修订版或先行版本号之后，先加上一个加号再加上一连串以句点分隔的标识符号来修饰。标识符号“必须 MUST ”由 ASCII 的英数字和连接号 [0-9A-Za-z-] 组成，且“禁止 MUST NOT ”留白。当判断版本的优先层级时，版本编译信息“可 SHOULD ”被忽略。因此当两个版本只有在版本编译信息有差别时，属于相同的优先层级。范例：1.0.0-alpha+001、1.0.0+20130313144700、1.0.0-beta+exp.sha.5114f85。\n\n11.版本的优先层级指的是不同版本在排序时如何比较。判断优先层级时，“必须 MUST ”把版本依序拆分为主版本号、次版本号、修订号及先行版本号后进行比较（版本编译信息不在这份比较的列表中）。由左到右依序比较每个标识符号，第一个差异值用来决定优先层级：主版本号、次版本号及修订号以数值比较，例如：1.0.0 < 2.0.0 < 2.1.0 < 2.1.1。当主版本号、次版本号及修订号都相同时，改以优先层级比较低的先行版本号决定。例如：1.0.0-alpha < 1.0.0。有相同主版本号、次版本号及修订号的两个先行版本号，其优先层级“必须 MUST ”透过由左到右的每个被句点分隔的标识符号来比较，直到找到一个差异值后决定：只有数字的标识符号以数值高低比较，有字母或连接号时则逐字以 ASCII 的排序来比较。数字的标识符号比非数字的标识符号优先层级低。若开头的标识符号都相同时，栏​位比较多的先行版本号优先层级比较高。范例：1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0- rc.1 < 1.0.0。\n\n## 为什么要使用语义化的版本控制？\n\n这并不是一个新的或者革命性的想法。实际上，你可能已经在做一些近似的事情了。问题在于只是“近似”还不够。如果没有某个正式的规范可循，版本号对于依赖的管理并无实质意义。将上述的想法命名并给予清楚的定义，让你对软件使用者传达意向变得容易。一旦这些意向变得清楚，弹性（但又不会太弹性）的依赖规范就能达成。\n\n举个简单的例子就可以展示语义化的版本控制如何让依赖地狱成为过去。假设有个名为“救火车”的函式库，它需要另一个名为“梯子”并已经有使用语义化版本控制的套件。当救火车创建时，梯子的版本号为 3.1.0。因为救火车使用了一些版本 3.1.0 所新增的功能， 你可以放心地指定相依于梯子的版本号大等于 3.1.0 但小于 4.0.0。这样，当梯子版本 3.1.1 和 3.2.0 发布时，你可以将直接它们纳入你的套件管理系统，因为它们能与原有相依的软件兼容。\n\n作为一位负责任的开发者，你理当确保每次套件升级的运作与版本号的表述一致。现实世界是复杂的，我们除了提高警觉外能做的不多。你所能做的就是让语义化的版本控制为你提供一个健全的方式来发行以及升级套件，而无需推出新的相依套件，节省你的时间及烦恼。\n\n如果你对此认同，希望立即开始使用语义化版本控制，你只需声明你的函式库正在使用它并遵循这些规则就可以了。请在你的 README 文件中保留此页连结，让别人也知道这些规则并从中受益。\n\n## 问答\n\n在 0.y.z 初始开发阶段，我该如何进行版本控制？\n\n最简单的做法是以 0.1.0 作为你的初始化开发版本，并在后续的每次发行时递增次版本号。\n\n如何判断发布 1.0.0 版本的时机？\n\n当你的软件被用于正式环境，它应该已经达到了 1.0.0 版。如果你已经有个稳定的 API 被使用者依赖，也会是 1.0.0 版。如果你很担心向下兼容的问题，也应该算是 1.0.0 版了。\n\n这不会阻碍快速开发和迭代吗？\n\n主版本号为零的时候就是为了做快速开发。如果你每天都在改变 API，那么你应该仍在主版本号为零的阶段（0.y.z），或是正在下个主版本的独立开发分支中。\n\n对于公共 API，若即使是最小但不向下兼容的改变都需要产生新的主版本号，岂不是很快就达到 42.0.0 版？\n\n这是开发的责任感和前瞻性的问题。不兼容的改变不应该轻易被加入到有许多依赖代码的软件中。升级所付出的代价可能是巨大的。要递增主版本号来发行不兼容的改版，意味着你必须为这些改变所带来的影响深思熟虑，并且评估所涉及的成本及效益比。\n\n为整个公共 API 写文件太费事了！\n\n为供他人使用的软件​​编写适当的文件，是你作为一名专业开发者应尽的职责。保持专案高效一个非常重要的部份是掌控软件的复杂度，如果没有人知道如何使用你的软件或不知道哪些函数的调用是可靠的，要掌控复杂度会是困难的。长远来看，使用语义化版本控制以及对于公共 API 有良好规范的坚持，可以让每个人及每件事都运行顺畅。\n\n万一不小心把一个不兼容的改版当成了次版本号发行了该怎么办？\n\n一旦发现自己破坏了语义化版本控制的规范，就要修正这个问题，并发行一个新的次版本号来更正这个问题并且恢复向下兼容。即使是这种情况，也不能去修改已发行的版本。可以的话，将有问题的版本号记录到文件中，告诉使用者问题所在，让他们能够意识到这是有问题的版本。\n\n如果我更新了自己的依赖但没有改变公共 API 该怎么办？\n\n由于没有影响到公共 API，这可以被认定是兼容的。若某个软件和你的套件有共同依赖，则它会有自己的依赖规范，作者也会告知可能的冲突。要判断改版是属于修订等级或是次版等级，是依据你更新的依赖关系是为了修复问题或是加入新功能。对于后者，我经常会预期伴随着更多的代码，这显然会是一个次版本号级别的递增。\n\n如果我变更了公共 API 但无意中未遵循版本号的改动怎么办呢？（意即在修订等级的发布中，误将重大且不兼容的改变加到代码之中）\n\n自行做最佳的判断。如果你有庞大的使用者群在依照公共 API 的意图而变更行为后会大受影响，那么最好做一次主版本的发布，即使严格来说这个修复仅是修订等级的发布。记住， 语义化的版本控制就是透过版本号的改变来传达意义。若这些改变对你的使用者是重要的，那就透过版本号来向他们说明。\n\n我该如何处理即将弃用的功能？\n\n弃用现存的功能是软件开发中的家常便饭，也通常是向前发展所必须的。当你弃用部份公共 API 时，你应该做两件事：（1）更新你的文件让使用者知道这个改变，（2）在适当的时机将弃用的功能透过新的次版本号发布。在新的主版本完全移除弃用功能前，至少要有一个次版本包含这个弃用信息，这样使用者才能平顺地转移到新版 API。\n\n语义化版本对于版本的字串长度是否有限制呢？\n\n没有，请自行做适当的判断。举例来说，长到 255 个字元的版本已过度夸张。再者，特定的系统对于字串长度可能会有他们自己的限制。\n\n## 关于\n\n语义化版本控制的规范是由 Gravatars 创办者兼 GitHub 共同创办者 [Tom Preston-Werner 所建立](http://tom.preston-werner.com/)。\n\n如果您有任何建议，请到 [GitHub 上提出您的问题](https://github.com/mojombo/semver/issues)。\n\n## 授权\n\n创用 CC 姓名标示 3.0 Unported 授权条款 http://creativecommons.org/licenses/by/3.0/\n\n## 附录\n\n### Alpha、Beta 等代表什么\n\nAlpha版: 此版本表示该软件在此阶段主要是以实现软件功能为主，通常只在软件开发者内部交流，一般而言，该版本软件的Bug较多，需要继续修改。\n\nBeta版: 该版本相对于α版已有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过多次测试来进一步消除，此版本主要的修改对像是软件的UI。\n\nRC版: 该版本已经相当成熟了，基本上不存在导致错误的BUG，与即将发行的正式版相差无几。此版本的作用是对团队内部喊话\"我们已经完成了当初预期的所有功能，大家从自己的角度看看我们有没有落东西\"。\n\nRelease版: 该版本意味“最终版本”，在前面版本的一系列测试版之后，终归会有一个正式版本，是最终交付用户使用的一个版本。该版本有时也称为标准版。一般情况下，Release不会以单词形式出现在软件封面上，取而代之的是符号(R)。此版本的作用是向上喊话\"报告首长，一切准备就绪，请指示\"，如果时机合适可能马上发布，也可能由于市场竞争对手或者融资等情况需要稍后发布。\n","tags":[]}
[2018-10-20T22:49:06.446] [TRACE] default - auth userRequired, URL:/api/articles/5bcb402da85b15baf6651e9d, method:POST
[2018-10-20T22:49:08.313] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-20T22:49:22.193] [TRACE] default - API request, URL:/api/articles/5bcb402da85b15baf6651e9d, method:GET, body:{}
[2018-10-20T22:49:30.029] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-20T22:49:55.543] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-20T22:50:02.495] [TRACE] default - API request, URL:/api/articles/5bcb402da85b15baf6651e9d, method:GET, body:{}
[2018-10-20T22:50:02.547] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-20T22:50:11.495] [TRACE] default - API request, URL:/api/articles/5bcb402da85b15baf6651e9d, method:POST, body:{"mdContent":"# 语义化版本\n\n> 版本管理是软件开发和发布中一个非常重要部分，混乱的版本会大大的缩短一个软件的寿命。我终于有幸看到这篇文章来讲述“语义化版本控制的规范”，作者是Tom Preston-Werner(Gravatars 创办者, GitHub 共同创办者)，这些规则是根据（但不局限于）已经被各种封闭、开放源码软件所广泛使用的惯例所设计，为叙述方便，下面以作者作为第一人称来叙述这套规范。\n\n## 摘要\n\n版本格式：主版本号.次版本号.修订号，版本号递增规则如下：\n  \n- 主版本号：当你做了不兼容的 API 修改，\n- 次版本号：当你做了向下兼容的功能性新增，\n- 修订号：当你做了向下兼容的问题修正。\n\n先行版本号及版本编译信息可以加到“主版本号.次版本号.修订号”的后面，作为延伸。\n## 简介\n\n在软件管理的领域里存在着被称作“依赖地狱”的死亡之谷，系统规模越大，加入的套件越多，你就越有可能在未来的某一天发现自己已深陷绝望之中。\n\n在依赖高的系统中发布新版本套件可能很快会成为恶梦。如果依赖关系过高，可能面临版本控制被锁死的风险（必须对每一个相依套件改版才能完成某次升级）。而如果依赖关系过于松散，又将无法避免版本的混乱（假设兼容于未来的多个版本已超出了合理数量）。当你专案的进展因为版本相依被锁死或版本混乱变得不够简便和可靠，就意味着你正处于依赖地狱之中。\n\n作为这个问题的解决方案之一，我提议用一组简单的规则及条件来约束版本号的配置和增长。这些规则是根据（但不局限于）已经被各种封闭、开放源码软件所广泛使用的惯例所设计。为了让这套理论运作，你必须先有定义好的公共 API 。这可以透过文件定义或代码强制要求来实现。无论如何，这套 API 的清楚明了是十分重要的。一旦你定义了公共 API，你就可以透过修改相应的版本号来向大家说明你的修改。考虑使用这样的版本号格式：XYZ （主版本号.次版本号.修订号）修复问题但不影响API 时，递增修订号；API 保持向下兼容的新增及修改时，递增次版本号；进行不向下兼容的修改时，递增主版本号。\n\n我称这套系统为“语义化的版本控制”，在这套约定下，版本号及其更新方式包含了相邻版本间的底层代码和修改内容的信息。\n\n## 语义化版本控制规范\n\n以下关键词 MUST、MUST NOT、REQUIRED、SHALL、SHALL NOT、SHOULD、SHOULD NOT、 RECOMMENDED、MAY、OPTIONAL 依照 RFC 2119 的叙述解读。（译注：为了保持语句顺畅， 以下文件遇到的关键词将依照整句语义进行翻译，在此先不进行个别翻译。）\n\n1.使用语义化版本控制的软件“必须 MUST ”定义公共 API。该 API 可以在代码中被定义或出现于严谨的文件内。无论何种形式都应该力求精确且完整。\n\n2.标准的版本号“必须 MUST ”采用 XYZ 的格式，​​ 其中 X、Y 和 Z 为非负的整数，且“禁止 MUST NOT”在数字前方补零。X 是主版本号、Y 是次版本号、而 Z 为修订号。每个元素“必须 MUST ”以数值来递增。例如：1.9.1 -> 1.10.0 -> 1.11.0。\n\n3.标记版本号的软件发行后，“禁止 MUST NOT ”改变该版本软件的内容。任何修改都“必须 MUST ”以新版本发行。\n\n4.主版本号为零（0.y.z）的软件处于开发初始阶段，一切都可能随时被改变。这样的公共 API 不应该被视为稳定版。\n\n5.1.0.0 的版本号用于界定公共 API 的形成。这一版本之后所有的版本号更新都基于公共 API 及其修改内容。\n\n6.修订号 Z（x.y.Z\tx > 0）“必须 MUST ”在只做了向下兼容的修正时才递增。这里的修正指的是针对不正确结果而进行的内部修改。\n\n7.次版本号 Y（x.Y.z，\tx > 0）“必须 MUST ”在有向下兼容的新功能出现时递增。在任何公共 API 的功能被标记为弃用时也“必须 MUST ”递增。也“可以 MAY ”在内部程序有大量新功能或改进被加入时递增，其中“可以 MAY ”包括修订级别的改变。每当次版本号递增时，修订号“必须 MUST ”归零。\n\n8.主版本号 X（X.y.z\tX > 0）“必须 MUST ”在有任何不兼容的修改被加入公共 API 时递增。其中“可以 MAY ”包括次版本号及修订级别的改变。每当主版本号递增时，次版本号和修订号“必须 MUST ”归零。\n\n9.先行版本号“可以 MAY ”被标注在修订版之后，先加上一个连接号再加上一连串以句点分隔的标识符号来修饰。标识符号“必须 MUST ”由 ASCII 码的英数字和连接号 [0-9A-Za-z-] 组成，且“禁止 MUST NOT ”留白。数字型的标识符号“禁止 MUST NOT ”在前方补零。先行版的优先级低于相关联的标准版本。被标上先行版本号则表示这个版本并非稳定而且可能无法达到兼容的需求。范例：1.0​​.0-alpha、1.0.0-alpha.1、1.0.0-0.3.7、1.0.0-x.7.z.92。\n\n10.版本编译信息“可以 MAY ”被标注在修订版或先行版本号之后，先加上一个加号再加上一连串以句点分隔的标识符号来修饰。标识符号“必须 MUST ”由 ASCII 的英数字和连接号 [0-9A-Za-z-] 组成，且“禁止 MUST NOT ”留白。当判断版本的优先层级时，版本编译信息“可 SHOULD ”被忽略。因此当两个版本只有在版本编译信息有差别时，属于相同的优先层级。范例：1.0.0-alpha+001、1.0.0+20130313144700、1.0.0-beta+exp.sha.5114f85。\n\n11.版本的优先层级指的是不同版本在排序时如何比较。判断优先层级时，“必须 MUST ”把版本依序拆分为主版本号、次版本号、修订号及先行版本号后进行比较（版本编译信息不在这份比较的列表中）。由左到右依序比较每个标识符号，第一个差异值用来决定优先层级：主版本号、次版本号及修订号以数值比较，例如：1.0.0 < 2.0.0 < 2.1.0 < 2.1.1。当主版本号、次版本号及修订号都相同时，改以优先层级比较低的先行版本号决定。例如：1.0.0-alpha < 1.0.0。有相同主版本号、次版本号及修订号的两个先行版本号，其优先层级“必须 MUST ”透过由左到右的每个被句点分隔的标识符号来比较，直到找到一个差异值后决定：只有数字的标识符号以数值高低比较，有字母或连接号时则逐字以 ASCII 的排序来比较。数字的标识符号比非数字的标识符号优先层级低。若开头的标识符号都相同时，栏​位比较多的先行版本号优先层级比较高。范例：1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0- rc.1 < 1.0.0。\n\n## 为什么要使用语义化的版本控制？\n\n这并不是一个新的或者革命性的想法。实际上，你可能已经在做一些近似的事情了。问题在于只是“近似”还不够。如果没有某个正式的规范可循，版本号对于依赖的管理并无实质意义。将上述的想法命名并给予清楚的定义，让你对软件使用者传达意向变得容易。一旦这些意向变得清楚，弹性（但又不会太弹性）的依赖规范就能达成。\n\n举个简单的例子就可以展示语义化的版本控制如何让依赖地狱成为过去。假设有个名为“救火车”的函式库，它需要另一个名为“梯子”并已经有使用语义化版本控制的套件。当救火车创建时，梯子的版本号为 3.1.0。因为救火车使用了一些版本 3.1.0 所新增的功能， 你可以放心地指定相依于梯子的版本号大等于 3.1.0 但小于 4.0.0。这样，当梯子版本 3.1.1 和 3.2.0 发布时，你可以将直接它们纳入你的套件管理系统，因为它们能与原有相依的软件兼容。\n\n作为一位负责任的开发者，你理当确保每次套件升级的运作与版本号的表述一致。现实世界是复杂的，我们除了提高警觉外能做的不多。你所能做的就是让语义化的版本控制为你提供一个健全的方式来发行以及升级套件，而无需推出新的相依套件，节省你的时间及烦恼。\n\n如果你对此认同，希望立即开始使用语义化版本控制，你只需声明你的函式库正在使用它并遵循这些规则就可以了。请在你的 README 文件中保留此页连结，让别人也知道这些规则并从中受益。\n\n## 问答\n\n在 0.y.z 初始开发阶段，我该如何进行版本控制？\n\n最简单的做法是以 0.1.0 作为你的初始化开发版本，并在后续的每次发行时递增次版本号。\n\n如何判断发布 1.0.0 版本的时机？\n\n当你的软件被用于正式环境，它应该已经达到了 1.0.0 版。如果你已经有个稳定的 API 被使用者依赖，也会是 1.0.0 版。如果你很担心向下兼容的问题，也应该算是 1.0.0 版了。\n\n这不会阻碍快速开发和迭代吗？\n\n主版本号为零的时候就是为了做快速开发。如果你每天都在改变 API，那么你应该仍在主版本号为零的阶段（0.y.z），或是正在下个主版本的独立开发分支中。\n\n对于公共 API，若即使是最小但不向下兼容的改变都需要产生新的主版本号，岂不是很快就达到 42.0.0 版？\n\n这是开发的责任感和前瞻性的问题。不兼容的改变不应该轻易被加入到有许多依赖代码的软件中。升级所付出的代价可能是巨大的。要递增主版本号来发行不兼容的改版，意味着你必须为这些改变所带来的影响深思熟虑，并且评估所涉及的成本及效益比。\n\n为整个公共 API 写文件太费事了！\n\n为供他人使用的软件​​编写适当的文件，是你作为一名专业开发者应尽的职责。保持专案高效一个非常重要的部份是掌控软件的复杂度，如果没有人知道如何使用你的软件或不知道哪些函数的调用是可靠的，要掌控复杂度会是困难的。长远来看，使用语义化版本控制以及对于公共 API 有良好规范的坚持，可以让每个人及每件事都运行顺畅。\n\n万一不小心把一个不兼容的改版当成了次版本号发行了该怎么办？\n\n一旦发现自己破坏了语义化版本控制的规范，就要修正这个问题，并发行一个新的次版本号来更正这个问题并且恢复向下兼容。即使是这种情况，也不能去修改已发行的版本。可以的话，将有问题的版本号记录到文件中，告诉使用者问题所在，让他们能够意识到这是有问题的版本。\n\n如果我更新了自己的依赖但没有改变公共 API 该怎么办？\n\n由于没有影响到公共 API，这可以被认定是兼容的。若某个软件和你的套件有共同依赖，则它会有自己的依赖规范，作者也会告知可能的冲突。要判断改版是属于修订等级或是次版等级，是依据你更新的依赖关系是为了修复问题或是加入新功能。对于后者，我经常会预期伴随着更多的代码，这显然会是一个次版本号级别的递增。\n\n如果我变更了公共 API 但无意中未遵循版本号的改动怎么办呢？（意即在修订等级的发布中，误将重大且不兼容的改变加到代码之中）\n\n自行做最佳的判断。如果你有庞大的使用者群在依照公共 API 的意图而变更行为后会大受影响，那么最好做一次主版本的发布，即使严格来说这个修复仅是修订等级的发布。记住， 语义化的版本控制就是透过版本号的改变来传达意义。若这些改变对你的使用者是重要的，那就透过版本号来向他们说明。\n\n我该如何处理即将弃用的功能？\n\n弃用现存的功能是软件开发中的家常便饭，也通常是向前发展所必须的。当你弃用部份公共 API 时，你应该做两件事：（1）更新你的文件让使用者知道这个改变，（2）在适当的时机将弃用的功能透过新的次版本号发布。在新的主版本完全移除弃用功能前，至少要有一个次版本包含这个弃用信息，这样使用者才能平顺地转移到新版 API。\n\n语义化版本对于版本的字串长度是否有限制呢？\n\n没有，请自行做适当的判断。举例来说，长到 255 个字元的版本已过度夸张。再者，特定的系统对于字串长度可能会有他们自己的限制。\n\n## 关于\n\n语义化版本控制的规范是由 Gravatars 创办者兼 GitHub 共同创办者 [Tom Preston-Werner 所建立](http://tom.preston-werner.com/)。\n\n如果您有任何建议，请到 [GitHub 上提出您的问题](https://github.com/mojombo/semver/issues)。\n\n## 授权\n\n创用 CC 姓名标示 3.0 Unported 授权条款 http://creativecommons.org/licenses/by/3.0/\n\n## 附录\n\n### Alpha、Beta 等代表什么\n\nAlpha版: 此版本表示该软件在此阶段主要是以实现软件功能为主，通常只在软件开发者内部交流，一般而言，该版本软件的Bug较多，需要继续修改。\n\nBeta版: 该版本相对于α版已有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过多次测试来进一步消除，此版本主要的修改对像是软件的UI。\n\nRC版: 该版本已经相当成熟了，基本上不存在导致错误的BUG，与即将发行的正式版相差无几。此版本的作用是对团队内部喊话\"我们已经完成了当初预期的所有功能，大家从自己的角度看看我们有没有落东西\"。\n\nRelease版: 该版本意味“最终版本”，在前面版本的一系列测试版之后，终归会有一个正式版本，是最终交付用户使用的一个版本。该版本有时也称为标准版。一般情况下，Release不会以单词形式出现在软件封面上，取而代之的是符号(R)。此版本的作用是向上喊话\"报告首长，一切准备就绪，请指示\"，如果时机合适可能马上发布，也可能由于市场竞争对手或者融资等情况需要稍后发布。\n","tags":["规范","杂谈"]}
[2018-10-20T22:50:11.495] [TRACE] default - auth userRequired, URL:/api/articles/5bcb402da85b15baf6651e9d, method:POST
[2018-10-20T22:50:13.700] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-20T22:50:17.067] [TRACE] default - API request, URL:/api/articles/5bcb402da85b15baf6651e9d, method:GET, body:{}
[2018-10-22T09:19:23.075] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-22T09:19:42.835] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-22T09:19:43.338] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-22T09:19:45.372] [TRACE] default - API request, URL:/api/articles, method:POST, body:{}
[2018-10-22T09:19:45.373] [TRACE] default - auth userRequired, URL:/api/articles, method:POST
[2018-10-22T09:19:45.626] [TRACE] default - API request, URL:/api/articles/5bcd25b179c3ad11e869148e, method:GET, body:{}
[2018-10-22T09:19:45.707] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-26T22:10:16.666] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-26T22:19:48.912] [TRACE] default - API request, URL:/api/articles/5bcd25b179c3ad11e869148e, method:GET, body:{}
[2018-10-26T22:19:50.259] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-26T22:19:56.782] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-26T22:19:57.271] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-26T22:20:03.406] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-10-26T22:20:03.450] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-26T22:20:03.756] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-26T22:20:07.256] [TRACE] default - API request, URL:/api/articles/5bcd25b179c3ad11e869148e, method:GET, body:{}
[2018-10-26T22:20:07.295] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-26T22:20:14.513] [TRACE] default - API request, URL:/api/articles/5bcd25b179c3ad11e869148e, method:POST, body:{"mdContent":"# Git 使用备忘\n\n> 可视化工具只是命令行的一个子集，可视化能做的命令行都能做，但是到目前为止还没有一个可视化工具实现了全部命令行，这里收集常用的命令，同时添加一些我的使用经验。\n\n## git clone\n\n`git clone 项目地址`，克隆一个项目到本地。\n\n## git status\n\n`git status`，查看哪些文件被改变了，需要在被 git 托管的文件夹下使用。下面是几个一级标题对应的含义：\n\n- Untracked files: 没有被托管的文件；\n- Changes not staged for commit: 被托管了但是没有被添加到推送队列；\n- Changes to be committed: 可被提交的文件，从上一个状态到这个状态需要下面的 `git add` 命令；\n下面是 \"Changes to be committed\" 状态下文件的一些状态：\n- modified: 修改的文件；\n- new file: 新添加的文件;\n- deleted: 删除文件\n\t\n## git add\n\t\n`git add dir/files`，添加托管文件，因为新建文件不会自动被 git 托管，所以需要手动添加\n\n```shell\n// 添加全部文件\ngit add .\n```\n\n## git rm\n\n```shell\n// 移除托管文件\ngit rm --cached 文件名\n```\n\n## git commit\n\n```shell\n// 提交到本地的一个版本 ---- https://git-scm.com/docs/git-commit\ngit commit -m \"提交的描述信息\"\n// 提交对文件的全部更改和删除\ngit commit -a -m \"提交的描述信息\" \n// 合并缓存区的修改和最近的一次 commit, 然后用生成的新的 commit 替换掉老的. \n// 如果缓存区没有内容, 那么利用 amend 可以修改上一次 commit 的描述.\ngit commit --amend\n```\n\n开发过程中很容易忘记 stage 某个文件或填写了不够准确的 commit 描述. --amend就是用来 fix 这些错误的.\n\n不要对一个公共的 commit 使用 amend，amend 后生成的 commit 是一个全新的 commit, 之前的老的 commit 会从项目历史中被删除. 如果你 amend 了一个被其他开发者使用的 commit, 可能会使其他开发者感到困惑。\n\n如果你想查看有几个 commit，可以用下面命令\n\n```shell\ngit log\n```\n\n如果你误 commit 了某一部分文件，还没有 push 到远程，那么你可以用上面的命令找到上一个 commit 的 commit_id，然后回滚到上一个 commit 之后的那一点，加 --hard 参数后未被 commit 的内容将被抛弃并不能被找回：\n\n```shell\ngit reset --hard commit_id\n```\n\n如果已经提交到了远程建议不要尝试各种撤销，建议提交一个新版本修正所犯错误。\n\n## git log\t\n\n```shell\n// 查看 commit日志\ngit log\n```\n\n## git push\n\n```shell\n// 将当前分支的修改推送到远程分支 dev\ngit push -u origin dev\n// -u 是建立分支追踪，以后就可以直接用下面命令了，而不需要指定要 push 哪个分支\ngit push\n// 删除远程分支\ngit push origin :branch_name_to_delete\n```\n\n## git branch \n\n`git branch` 列出本地分支；\n\n`git branch -a` 列出全部分支，包括远程和本地分支；\n\n`git branch --track 本地分支名 origin/远程分支名`，手动建立追踪，[资料传送门](http://blog.csdn.net/hudashi/article/details/7664474)。在 `push` 的时候可以指定 `-u` 参数来快速建立追踪，一般在分支第一次提交的时候加此参数，以后就可以直接 `git push` 了，不需要添加远程分支名。\n\n`git branch -d 分知名` 删除本地分支；\n`git branch -D 分知名` 经常是这个分支出问题了我们才删除，最常见的就是合并坏了需要重新 checkout(典型的警告提示 \"deleting branch XXX that has been merged\")，大写 D 强制删除；\n\n`git branch -d origin/分知名` 删除远程分支；\n\n有时候用上面的方法删除会报出 \"error: branch 'origin/branch_to_delete' not found.\" 的错误，但是我们明明可以看到远程有那个分支，为什么要报找不到呢？这个可能是本地分支描述文件错误造成的，\".git/refs/heads/origin/\"下有所有分支的描述文件，一个简单粗暴的办法就是当做一次 push，这样就不会走本地扫描这条路了，命令： `git push origin :分支名`。\n\n造成错误的原因可能是已经向这个分支 commit 了，但是没有 push 或者 push 出错都会造成分支描述文件的改变，可以试试 \"rm .git/refs/heads/分支名\" -- 删除描述文件。\n\n有时远程分支明明已经没有了可是在本地 `git branch -a` 的时候还能看到，这是怎么回事？\n因为 .git/refs/remotes/origin 文件夹下有缓存文件，手动删除一下就可以。还有一个地方可能有缓存 .git/packed-ref 文件中。\n\n## git config\n\n```shell\n// 获取配置信息\ngit config --list\n// 设置用户名\ngit config --global user.name \"用户名\"\n// 设置用户邮箱\ngit config --global user.email \"your.email@gmail.com\"\n```\n\n除了配置和获取用户信息外，此命令可以配置命令的别名：\n\n```shell\n// 如果配置了下面的别称\ngit config --global alias.ci commit\n// 那么以后 commit 就可以向下面这样简写了\ngit ci -m \"提交描述\"\n```\n\n## git checkout\n\n`git checkout -b 本地分支名 origin/远程分知名`，将远程分支检出到本地作为新的本地分支，并且切换到新分支，参数 `-b` 指定是新建分支 `new branch` 而不是分只切换；\n\t\n`git checkout 分知名` 切换本地分支；\n\n可以用此命令删除远程分支：`git push origin :分支名`，git 没有提供删除本地分支的命令，这里可以通过删除文件的方式删除本地分支：`rm .git/refs/heads/本地分支名`。\n\nHEAD 是 checkout 的灵魂。\n\n## git fetch\n\n`git fetch`，将远程分支列表映射到本地，主要的应用场景是别人新建了远程分支但是我们本地无法看到，执行该命令可以将远程的分支映射到本地方便检出。如果只想映射某一个分支(这个分支的名称当然需要其他人告诉你)，可以使用下面命令：\n\n```shell\ngit fetch origin 远程分知名:本地分支名\n// 如果只想获取远程分支映射而不想检出到本地，可用下面简写\ngit fetch origin 远程分知名\n```\n\n此命令不仅将远程映射到本地，还会检出一份代码作为本地分支，本地分知名在冒号后面指定。\n\n远程分支删除后用 `git branch -a` 还能看到被删除的分支，这是因为 git 的缓存机制，可以用下面命令删除远程已经不存在但本地却还有缓存的分支。\n\n```shell\ngit fetch -p\n```\n## git merge\n\n将其他分支的代码合并到当前所在分支，\n\n```shell\n// 合并远程分支代码\ngit merge origin/feature/z\n// 合并本地分支代码\ngit merge feature/z\n```\n\n这里需要注意一点，被合并的远程分支需要先将改动映射到本地 `git fetch origin 远程分知名`，否则不能拿到最新修改。这个`fetch`命令的优势是可以不检出本地分支，更不需要切换到被合并分支的本地分支。另外 `fetch` 不改变本地代码，但是已经将修改同步到了本地仓库，这个便捷来自于 git 的差异更新机制。\n\n## git pull\n\n拉取远程分支并合并到当前分支\n\n```shell\ngit pull origin dev\n```\n\n如果已经建立了跟踪可以如下简写：\n\n```shell\ngit pull\n```\n\n## 参考资料\n\n[官方文档](https://git-scm.com/docs/)\n\n[GitHub详细教程](http://blog.csdn.net/showhilllee/article/details/27706679)\n\n[Sublime 下配置 GitHub](http://www.cnblogs.com/terrylin/archive/2013/04/04/2999465.html)\n\n[Git分支管理策略](http://www.ruanyifeng.com/blog/2012/07/git.html)\n\n[github-flow](http://scottchacon.com/2011/08/31/github-flow.html)\n\n[创建 git 项目](http://www.jianshu.com/p/df7ce9f3a5cb)\n\n[git checkout 命令详解](http://www.tuicool.com/articles/A3Mn6f)\n\n全部命令在[官方文档](https://git-scm.com/docs/)查到，这里翻译和记录一些常用命令。\n","tags":[]}
[2018-10-26T22:20:14.514] [TRACE] default - auth userRequired, URL:/api/articles/5bcd25b179c3ad11e869148e, method:POST
[2018-10-26T22:20:51.403] [TRACE] default - API request, URL:/api/articles/5bcd25b179c3ad11e869148e, method:POST, body:{"mdContent":"# Git 使用备忘\n\n> 可视化工具只是命令行的一个子集，可视化能做的命令行都能做，但是到目前为止还没有一个可视化工具实现了全部命令行，这里收集常用的命令，同时添加一些我的使用经验。\n\n## git clone\n\n`git clone 项目地址`，克隆一个项目到本地。\n\n## git status\n\n`git status`，查看哪些文件被改变了，需要在被 git 托管的文件夹下使用。下面是几个一级标题对应的含义：\n\n- Untracked files: 没有被托管的文件；\n- Changes not staged for commit: 被托管了但是没有被添加到推送队列；\n- Changes to be committed: 可被提交的文件，从上一个状态到这个状态需要下面的 `git add` 命令；\n下面是 \"Changes to be committed\" 状态下文件的一些状态：\n- modified: 修改的文件；\n- new file: 新添加的文件;\n- deleted: 删除文件\n\t\n## git add\n\t\n`git add dir/files`，添加托管文件，因为新建文件不会自动被 git 托管，所以需要手动添加\n\n```shell\n// 添加全部文件\ngit add .\n```\n\n## git rm\n\n```shell\n// 移除托管文件\ngit rm --cached 文件名\n```\n\n## git commit\n\n```shell\n// 提交到本地的一个版本 ---- https://git-scm.com/docs/git-commit\ngit commit -m \"提交的描述信息\"\n// 提交对文件的全部更改和删除\ngit commit -a -m \"提交的描述信息\" \n// 合并缓存区的修改和最近的一次 commit, 然后用生成的新的 commit 替换掉老的. \n// 如果缓存区没有内容, 那么利用 amend 可以修改上一次 commit 的描述.\ngit commit --amend\n```\n\n开发过程中很容易忘记 stage 某个文件或填写了不够准确的 commit 描述. --amend就是用来 fix 这些错误的.\n\n不要对一个公共的 commit 使用 amend，amend 后生成的 commit 是一个全新的 commit, 之前的老的 commit 会从项目历史中被删除. 如果你 amend 了一个被其他开发者使用的 commit, 可能会使其他开发者感到困惑。\n\n如果你想查看有几个 commit，可以用下面命令\n\n```shell\ngit log\n```\n\n如果你误 commit 了某一部分文件，还没有 push 到远程，那么你可以用上面的命令找到上一个 commit 的 commit_id，然后回滚到上一个 commit 之后的那一点，加 --hard 参数后未被 commit 的内容将被抛弃并不能被找回：\n\n```shell\ngit reset --hard commit_id\n```\n\n如果已经提交到了远程建议不要尝试各种撤销，建议提交一个新版本修正所犯错误。\n\n## git log\t\n\n```shell\n// 查看 commit日志\ngit log\n```\n\n## git push\n\n```shell\n// 将当前分支的修改推送到远程分支 dev\ngit push -u origin dev\n// -u 是建立分支追踪，以后就可以直接用下面命令了，而不需要指定要 push 哪个分支\ngit push\n// 删除远程分支\ngit push origin :branch_name_to_delete\n```\n\n## git branch \n\n`git branch` 列出本地分支；\n\n`git branch -a` 列出全部分支，包括远程和本地分支；\n\n`git branch --track 本地分支名 origin/远程分支名`，手动建立追踪，[资料传送门](http://blog.csdn.net/hudashi/article/details/7664474)。在 `push` 的时候可以指定 `-u` 参数来快速建立追踪，一般在分支第一次提交的时候加此参数，以后就可以直接 `git push` 了，不需要添加远程分支名。\n\n`git branch -d 分知名` 删除本地分支；\n`git branch -D 分知名` 经常是这个分支出问题了我们才删除，最常见的就是合并坏了需要重新 checkout(典型的警告提示 \"deleting branch XXX that has been merged\")，大写 D 强制删除；\n\n`git branch -d origin/分知名` 删除远程分支；\n\n有时候用上面的方法删除会报出 \"error: branch 'origin/branch_to_delete' not found.\" 的错误，但是我们明明可以看到远程有那个分支，为什么要报找不到呢？这个可能是本地分支描述文件错误造成的，\".git/refs/heads/origin/\"下有所有分支的描述文件，一个简单粗暴的办法就是当做一次 push，这样就不会走本地扫描这条路了，命令： `git push origin :分支名`。\n\n造成错误的原因可能是已经向这个分支 commit 了，但是没有 push 或者 push 出错都会造成分支描述文件的改变，可以试试 \"rm .git/refs/heads/分支名\" -- 删除描述文件。\n\n有时远程分支明明已经没有了可是在本地 `git branch -a` 的时候还能看到，这是怎么回事？\n因为 .git/refs/remotes/origin 文件夹下有缓存文件，手动删除一下就可以。还有一个地方可能有缓存 .git/packed-ref 文件中。\n\n## git config\n\n```shell\n// 获取配置信息\ngit config --list\n// 设置用户名\ngit config --global user.name \"用户名\"\n// 设置用户邮箱\ngit config --global user.email \"your.email@gmail.com\"\n```\n\n除了配置和获取用户信息外，此命令可以配置命令的别名：\n\n```shell\n// 如果配置了下面的别称\ngit config --global alias.ci commit\n// 那么以后 commit 就可以向下面这样简写了\ngit ci -m \"提交描述\"\n```\n\n## git checkout\n\n`git checkout -b 本地分支名 origin/远程分知名`，将远程分支检出到本地作为新的本地分支，并且切换到新分支，参数 `-b` 指定是新建分支 `new branch` 而不是分只切换；\n\t\n`git checkout 分知名` 切换本地分支；\n\n可以用此命令删除远程分支：`git push origin :分支名`，git 没有提供删除本地分支的命令，这里可以通过删除文件的方式删除本地分支：`rm .git/refs/heads/本地分支名`。\n\nHEAD 是 checkout 的灵魂。\n\n## git fetch\n\n`git fetch`，将远程分支列表映射到本地，主要的应用场景是别人新建了远程分支但是我们本地无法看到，执行该命令可以将远程的分支映射到本地方便检出。如果只想映射某一个分支(这个分支的名称当然需要其他人告诉你)，可以使用下面命令：\n\n```shell\ngit fetch origin 远程分知名:本地分支名\n// 如果只想获取远程分支映射而不想检出到本地，可用下面简写\ngit fetch origin 远程分知名\n```\n\n此命令不仅将远程映射到本地，还会检出一份代码作为本地分支，本地分知名在冒号后面指定。\n\n远程分支删除后用 `git branch -a` 还能看到被删除的分支，这是因为 git 的缓存机制，可以用下面命令删除远程已经不存在但本地却还有缓存的分支。\n\n```shell\ngit fetch -p\n```\n## git merge\n\n将其他分支的代码合并到当前所在分支，\n\n```shell\n// 合并远程分支代码\ngit merge origin/feature/z\n// 合并本地分支代码\ngit merge feature/z\n```\n\n这里需要注意一点，被合并的远程分支需要先将改动映射到本地 `git fetch origin 远程分知名`，否则不能拿到最新修改。这个`fetch`命令的优势是可以不检出本地分支，更不需要切换到被合并分支的本地分支。另外 `fetch` 不改变本地代码，但是已经将修改同步到了本地仓库，这个便捷来自于 git 的差异更新机制。\n\n## git pull\n\n拉取远程分支并合并到当前分支\n\n```shell\ngit pull origin dev\n```\n\n如果已经建立了跟踪可以如下简写：\n\n```shell\ngit pull\n```\n\n## 参考资料\n\n[官方文档](https://git-scm.com/docs/)\n\n[GitHub详细教程](http://blog.csdn.net/showhilllee/article/details/27706679)\n\n[Sublime 下配置 GitHub](http://www.cnblogs.com/terrylin/archive/2013/04/04/2999465.html)\n\n[Git分支管理策略](http://www.ruanyifeng.com/blog/2012/07/git.html)\n\n[github-flow](http://scottchacon.com/2011/08/31/github-flow.html)\n\n[创建 git 项目](http://www.jianshu.com/p/df7ce9f3a5cb)\n\n[git checkout 命令详解](http://www.tuicool.com/articles/A3Mn6f)\n\n全部命令在[官方文档](https://git-scm.com/docs/)查到，这里翻译和记录一些常用命令。\n","tags":["个人笔记","工程"]}
[2018-10-26T22:20:51.404] [TRACE] default - auth userRequired, URL:/api/articles/5bcd25b179c3ad11e869148e, method:POST
[2018-10-26T22:21:14.790] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-26T22:21:18.002] [TRACE] default - API request, URL:/api/articles/5bcd25b179c3ad11e869148e, method:GET, body:{}
[2018-10-31T21:23:32.658] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-31T21:23:40.717] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-31T21:52:13.780] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-31T21:52:53.875] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-31T21:52:54.846] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-10-31T21:52:57.227] [TRACE] default - API request, URL:/api/articles, method:POST, body:{}
[2018-10-31T21:52:57.229] [TRACE] default - auth userRequired, URL:/api/articles, method:POST
[2018-10-31T21:52:57.822] [TRACE] default - API request, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:GET, body:{}
[2018-10-31T21:52:57.906] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-10-31T21:53:22.336] [TRACE] default - API request, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:POST, body:{"mdContent":"# NPM\n\n> NPM 的全称是 Node Package Manager，原本是一个 NodeJS 包管理和分发平台，但是浏览器端运行的 JS 也缺一个第三方包管理平台，后来在社区的推动下 NPM 可以管理全部的第三方 JS 包，包括 Node 端和浏览器端，浏览器到目前为止还没有原生支持包管理，现在浏览器端项目的包管理一般借助脚手架来实现。NPM 可以算作前端的必备技能，这里介绍一些基础知识和典型场景下的技巧。\n\n## 一个包的基本组成\n\nNPM 是一个包管理平台，它对包做了一些规范，一些重要文件的描述如下：\n\n`package.json` 包的配置文件(一些重要的说明也在里面，依赖，版本，描述)；\n\n`README.md` 包的说明书；\n\n`LICENSE` 这个文件存放[许可协议](/index.html#!/articles/license)；\n\n`bin` 如果是 node 包，是命令执行的入口文件，对应 package.json 的 bin 配置；\n\n`lib`  功能代码，提供 bin 所需的一切；\n\n`src` 如果是浏览器端的包，源码会放在这里；\n\n`dist` 存放浏览器端包的压缩代码，方便直接被下载使用，在模块化和自动构建盛行的今天可省略；\n\n`test` 自动化测试文件。\n\n## 安装依赖包\n\n自动把模块和版本号添加到dependencies部分。\n\n```shell\nnpm install module-name --save \n```\n\n自动把模块和版本号添加到devDependencies部分。\n\n```shell\nnpm install module-name --save-dev\n```\n\n`npm install`默认会安转两种依赖相当于`npm install --production` + `npm install --dev`，如果你只是单纯的使用这个包而不需要进行一些改动测试之类的可以使用前一个，如果想进一步了解。\n\n另外，如果想全局安装可以加参数 `-g`，像这样：`npm install -g <package-name>`。\n\n还可以从指定路径安装需要的包：\n\n```shell\nnpm --registry=https://registry.npm.taobao.org install cnpm -g\n```\n\n如果装错了你可以不用管，但是如果有一点小洁癖的话可以卸载掉，加`--save`同样会将`package.json` 中的配置移除掉：\n\n```shell\nnpm uninstall module-name --save\n```\n\n## 依赖包版本的控制\n\n如果我们没有精力去实时关注依赖包的更新，或者依赖包是一个不稳定版本，API 还处在一个快速迭代的时期，那么我们最好依赖一个特定的版本。根据自己的需求来指定版本依赖方式，下面是来自官方文档的部分译文。\n\nDependencies 用一个包名的简单哈希来描述包的版本范围(译者注：简单地说就是键值对\"vue\": \"^2.1.4\")。版本范围通过一个字符串来设置，该字符串可以有一个或多个间隔描述符。依赖包还可以通过源码或 git 的 URL来指定。 \n\n注意不要将测试工具和打包转换等工具的依赖放到 Dependencies 中。\n\n- `^version` 能兼容所配置版本\n- `version1 - version2`\n- `range1 || range2`\n\n[语法规则原文](https://github.com/npm/npm/blob/2e3776bf5676bc24fec6239a3420f377fe98acde/doc/files/package.json.md#dependencies)\n\nGit URLs 可以是下面格式：\n\n```shell\ngit://github.com/user/project.git#commit-ish\ngit+ssh://user@hostname:project.git#commit-ish\ngit+ssh://user@hostname/project.git#commit-ish\ngit+http://user@hostname/project/blah.git#commit-ish\ngit+https://user@hostname/project/blah.git#commit-ish\n```\n\n## dependencies 和 devDependencies\n\n简单的说 dependencies 是生产环境依赖的包，上线的时候需要将 dependencies 下的包打包；而 devDependencies 是开发这个包时需要的一些依赖，也就是说脱离了这个包的开发 devDependencies 可以被忽略。如果其他包引用了当前包，devDependencies 下的依赖是不会被安装的，dependencies 下的依赖 npm 会和其他包的依赖进行全集计算，使安装的包尽可能少。\n\n如果写的是某个库的或框架的插件，还有一种 dependencies 类型是 peerDependencies，应该在 peerDependencies 中写一份，再在 devDependencies 写一份。具体的原因参考[开发组件库时 Vue 应该放哪儿](https://cnodejs.org/topic/5819624a1a9a7d9909531395)\n\n## 常用命令\n\n`npm init`: 初始化 package.json 文件，根据提示输入一些关键信息就可以将文件初始化完成。\n\n`npm install`: 安装依赖包。\n\n`npm ls -g`: 查看所有全局安装的模块。如果你不想看到那么多层的依赖，那就加个参数吧：`sudo npm ls -g --depth 0`。\n\n`npm prune`: 如果你的 node_modules 目录中已经安装了一个 package，但是package.json 中并没有对该 package 做依赖，那么这个 package 就应该被删除。这时如果执行npm ls命令则指示有一个 “npm ERR! extraneous: ...”。为了清理代码，你需要执行npm prune。\n\n`npm uninstall <package-name>`: 卸载包。\n\n`npm root -g`: 查看全局安装路径。\n\n`npm link`: 将当前包链接到全局，方便地对当前包进行调试和测试。\n\n## 多版本 node 管理\n\n在维护一些老项目的时候，一些工具依赖于某一版本的 node 才能运行起来，这就需要在不同的版本之间来回切换，这时你需要一个多版本管理工具 `n`，没错这个工具的名字就这么简短，只有一个字母，下面是使用方法：\n\n```shell\n// 安装多版本管理工具\nsudo npm install -g n\n// 安装6.0.0版本的 node\nn 6.0.0\n// 查看和切换 node 版本，上下键选版本，回车确定\nn\n// 移除某一版本\nn rm 6.0.0\n```\n\n另外你可以直接打开文件夹查看 node 的版本，也可以直接删除某一版本的 node(因为经常会出现安装失败的情况所以需要删除后重装)\n\n```shell\n/usr/local/n/versions/node\n```\n\nnode 版本的偶数版是稳定版，使用 `n ls` 可以查看全部发布过的 node 版本，下面是一些关键的版本：\n\n```shell\n0.0.1    // 里程碑的起点\n0.1.104  // 0.1 版本的最后一个版本\n0.12.12  // 这一版本的工具很多，很多没有持续维护的工具都对此版本有强依赖\n4.0.0    // node 和 io 合并直接跳到 io 的下一个非兼容版本\n4.4.4\n5.11.0\n6.0.0\n7.0.0\n8.0.0\n```\n\n关于版本管理，可以查看我的另一篇博客 [语义化版本](/index.html#!/articles/semantic-versioning)。\n\n## 常见问题\n\n### 缺 package.json 文件\n\n`npm ERR! registry error parsing json` 填写了 `--save` 或者 `--save-dev` 参数但是当前位置没有 package.json 文件，需要先执行 `npm init`；\n\n### 依赖安装失败\n\n国内环境受到墙的影响，可能安装缓慢，也可能大面积安装失败，如果大面积安装失败可以尝试 `cnpm` 这样的国内镜像，或者翻墙。个别安装失败会在安装或运行的时候提示某个包找不到，这时需要单独安装缺失的包，npm 2.0 之后依赖的依赖不会放在依赖下面的 node_modules，而是会放在依赖的同级，所以只要在项目路径下安装缺失的包就可以。如果以上方法都不行，先去喝杯咖啡回来可能就可以装上了...\n\n### 依赖变更\n\n锁定依赖版本防止被人上房抽梯，由 left-pad 引发的思考。如果某个包不遵守开原版本规范，有了不兼容升级却只改了一个小版本，npm 平台并不限制这种行为，但是 npm 是不允许修改已发布版本的，所以版本锁定是一个较为稳妥的方案。\n\n### 引用逻辑\n\n先说一下定义文件的读取规则：\n\n- .js;\n- 文件夹，读取 package.json 的 main 设置，然后根据设置引用文件;\n- 文件夹，读取不到 package.json 的直接引用 index.js;\n- 注意 .json 并不能直接被包引用识别。\n\n自定义文件像这样引用 `import packageName from './package-path`，依赖包的引用像这样`import packageName from 'package-name`。依赖包的引用规则：\n\n- 先找缓存中是否有;\n- 然后当先项目下的 node_modules 文件夹下，如果找到了添加到缓存下;\n- 项目上一层目录的 node_modules，如果找到了添加到缓存下。\n\nES6 与 CommonJs 的引用略有不同，具体参考我的另一篇学习笔记[ ES6 学习笔记 - Part 3](/index.html#!/articles/es6-3)。\n\n### permission denied\n\n`Error: EACCES: permission denied` 这段报错也是较为常见的，尤其是一些不太出名的需要全局安装的包，在执行的时候可能会报这个错，直译就是“许可被拒绝”，也就是文件权限的问题，最简单粗暴的方法就是把 node_modules 的权限改成 777，污染小一点的方案是改单个工具的文件所属。比如我遇到的问题是公司全家桶 yog2，可以这样\n\n```shell\nsudo chown -R $USER /usr/local/lib/node_modules/yog2\n```\n\n再补充一下前端工具经常用的的路径：\n\n```shell\n// node 全局命令的入口\n/usr/local/bin\n// 全局 node_modules路径\n/usr/local/lib/node_modules\n```\n\n## 发布一个包\n\n首先去 [npm 官网](https://www.npmjs.com/)注册账户;\n    \n然后登录\n\n```shell\nnpm login\n```\n\n最后发布\n\n```\nsudo npm publish\n```\n\n实测我开发的一个中间件 `koa-auto-path-router` 从发布到可以搜到只需要 3 分钟。如果要发布新版本记得手动修改 package.json 中的版本号。发布后在项目中的更新命令：\n\n```shell\nnpm update <package name>\n```\n\n删除一个包\n\n```shell\nnpm --force unpublish 包名\n```\n\n查看其它配置:\n\n```shell\nnpm config ls -l\n// 查看当前用户\nnpm whoami\n```\n\n退出登录\n\n```shell\n    npm logout\n```\n\n有一次发布包的时候遇到个小问题，报错信息如下：\n\n```shell\n    npm ERR! you must verify your email before publishing a new package: https://www.npmjs.com/email-edit :\n```\n\n首先包中配置的邮箱要和 npm 账户中的邮箱要匹配，如果邮箱改变了需要重新验证，npm 会发验证邮件到邮箱，你需要点一下。有段时间翻墙有点问题，发现配 gmail 死活 publish 不上去，后来换成 163 邮箱就上去了。\n\n## 收集常用的包\n\n### 浏览器端、客户端\n\n- js-cookie 浏览器端操作 cookie\n- clipboard 复制，支持 IE9+\n\n### 服务端、CLI\n\n- consolidate，集成模板引擎；\n\n- chalk，命令行高亮；\n\n- commander，命令行辅助，TJ 大神的库。还有更简单的库 -- yargs；\n\n- inquirer，收集用户输入，支持单选，多选，文本输入，密码输入，更具前面输入判断是否展示当前项，校验，加工输入；\n\n- download-git-repo，下载远程仓库。容易被忽略的一点就是带了 ssh 的功能，可以用来从私有库下载，回调函数执行的时候文件没有被保存到本地硬盘，可以在回调函数中加工下载文件；\n\n- metalsmith，构建静态网站的工具，每一个加工的工序就是一个插件；\n\n## 参考资料\n\n[官方文档](https://docs.npmjs.com)\n\n[package.json 的官方说明](https://github.com/npm/npm/blob/2e3776bf5676bc24fec6239a3420f377fe98acde/doc/files/package.json.md)\n\n[What's the difference between dependencies, devDependencies and peerDependencies in npm package.json file?](http://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies)\n\n[开发组件库时 Vue 应该放哪儿：devDependencies or peerDependencies？](https://cnodejs.org/topic/5819624a1a9a7d9909531395)\n\t\n[记npm包开发全过程](http://www.w2bc.com/Article/86039)\t\n","tags":["个人笔记","技术点","工程"]}
[2018-10-31T21:53:22.337] [TRACE] default - auth userRequired, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:POST
[2018-10-31T21:53:26.732] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-10-31T22:13:21.795] [TRACE] default - API request, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:GET, body:{}
[2018-11-03T21:23:29.879] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T09:51:19.717] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T09:51:28.155] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-11-22T09:51:55.057] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T09:51:57.312] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-22T09:52:06.936] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-11-22T09:52:07.153] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T09:52:08.379] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-22T09:52:17.278] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-11-22T09:52:17.574] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-22T17:28:02.128] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:28:02.290] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:31:16.601] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:31:19.435] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-22T17:31:26.189] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-11-22T17:31:26.593] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-22T17:31:31.937] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:POST, body:{"mdContent":"# Markdown 语法示例\n\n> 有什么方法可以快速写出 80 分的文档吗？如果有那一定是 markdown 了。markdown 通过给标签指定样式，不需要像 word 那样需要选中再点来点去，markdown 的全部输入都通过键盘来完成，没有鼠标什么事，安心的写内容，不需要担心格式，最后输出干净简单的文档。\n\n## 二级标题\n\nmarkdown中，一级标题被定义为文章标题，二级标题是内容中最大的标题。\n\n### 三级标题\n\n同理，三个井号定义三级标题，一般小篇幅的文章(万字以下)，这两级内容标题就够用了。\n\n### 段落内样式\n\n还有一些文字技巧：\n\n**加粗**，一些想重点强调的地方可以加粗。\n\n`引用或专有名词`，如果是一个新概念，用明确的标识可以降低阅读难度。\n\n### 块级样式\n\n最常用的是列表，无数字列表：\n\n- 第一项\n- 第二项\n\n有数字列表\n\n1. 第一项\n2. 第二项\n\n作为码农代码块是少不了的：\n\n```js\nconsole.log('hello world');\n```\n\n或许你还需要一个表格\n\n表头一          | 表头二            | 表头三\n------------ | ------------- | ------------\n单元格          | 单元格            | 单元格          \n单元格          | 单元格            | 单元格          \n\n最后你也许想引入一张图片：\n![](/upload-files/upload_a91ac9a3474da6afba8ba1696c78317f.jpeg)\n\n## 参考\n\nhttps://en.wikipedia.org/wiki/Markdown\n","tags":["推荐","个人笔记"]}
[2018-11-22T17:31:31.938] [TRACE] default - auth userRequired, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:POST
[2018-11-22T17:31:38.733] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:31:40.955] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:31:42.473] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-22T17:31:44.429] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:31:45.933] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-22T17:31:55.603] [TRACE] default - API request, URL:/api/users/signout, method:POST, body:{}
[2018-11-22T17:31:55.625] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:31:56.963] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-22T17:31:59.662] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:32:00.865] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-22T17:32:15.391] [TRACE] default - API request, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:GET, body:{}
[2018-11-22T17:32:16.258] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-22T17:32:21.219] [TRACE] default - API request, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:POST, body:{"mdContent":"# NPM\n\n> NPM 的全称是 Node Package Manager，原本是一个 NodeJS 包管理和分发平台，但是浏览器端运行的 JS 也缺一个第三方包管理平台，后来在社区的推动下 NPM 可以管理全部的第三方 JS 包，包括 Node 端和浏览器端，浏览器到目前为止还没有原生支持包管理，现在浏览器端项目的包管理一般借助脚手架来实现。NPM 可以算作前端的必备技能，这里介绍一些基础知识和典型场景下的技巧。\n\n## 一个包的基本组成\n\nNPM 是一个包管理平台，它对包做了一些规范，一些重要文件的描述如下：\n\n`package.json` 包的配置文件(一些重要的说明也在里面，依赖，版本，描述)；\n\n`README.md` 包的说明书；\n\n`LICENSE` 这个文件存放[许可协议](/index.html#!/articles/license)；\n\n`bin` 如果是 node 包，是命令执行的入口文件，对应 package.json 的 bin 配置；\n\n`lib`  功能代码，提供 bin 所需的一切；\n\n`src` 如果是浏览器端的包，源码会放在这里；\n\n`dist` 存放浏览器端包的压缩代码，方便直接被下载使用，在模块化和自动构建盛行的今天可省略；\n\n`test` 自动化测试文件。\n\n## 安装依赖包\n\n自动把模块和版本号添加到dependencies部分。\n\n```shell\nnpm install module-name --save \n```\n\n自动把模块和版本号添加到devDependencies部分。\n\n```shell\nnpm install module-name --save-dev\n```\n\n`npm install`默认会安转两种依赖相当于`npm install --production` + `npm install --dev`，如果你只是单纯的使用这个包而不需要进行一些改动测试之类的可以使用前一个，如果想进一步了解。\n\n另外，如果想全局安装可以加参数 `-g`，像这样：`npm install -g <package-name>`。\n\n还可以从指定路径安装需要的包：\n\n```shell\nnpm --registry=https://registry.npm.taobao.org install cnpm -g\n```\n\n如果装错了你可以不用管，但是如果有一点小洁癖的话可以卸载掉，加`--save`同样会将`package.json` 中的配置移除掉：\n\n```shell\nnpm uninstall module-name --save\n```\n\n## 依赖包版本的控制\n\n如果我们没有精力去实时关注依赖包的更新，或者依赖包是一个不稳定版本，API 还处在一个快速迭代的时期，那么我们最好依赖一个特定的版本。根据自己的需求来指定版本依赖方式，下面是来自官方文档的部分译文。\n\nDependencies 用一个包名的简单哈希来描述包的版本范围(译者注：简单地说就是键值对\"vue\": \"^2.1.4\")。版本范围通过一个字符串来设置，该字符串可以有一个或多个间隔描述符。依赖包还可以通过源码或 git 的 URL来指定。 \n\n注意不要将测试工具和打包转换等工具的依赖放到 Dependencies 中。\n\n- `^version` 能兼容所配置版本\n- `version1 - version2`\n- `range1 || range2`\n\n[语法规则原文](https://github.com/npm/npm/blob/2e3776bf5676bc24fec6239a3420f377fe98acde/doc/files/package.json.md#dependencies)\n\nGit URLs 可以是下面格式：\n\n```shell\ngit://github.com/user/project.git#commit-ish\ngit+ssh://user@hostname:project.git#commit-ish\ngit+ssh://user@hostname/project.git#commit-ish\ngit+http://user@hostname/project/blah.git#commit-ish\ngit+https://user@hostname/project/blah.git#commit-ish\n```\n\n## dependencies 和 devDependencies\n\n简单的说 dependencies 是生产环境依赖的包，上线的时候需要将 dependencies 下的包打包；而 devDependencies 是开发这个包时需要的一些依赖，也就是说脱离了这个包的开发 devDependencies 可以被忽略。如果其他包引用了当前包，devDependencies 下的依赖是不会被安装的，dependencies 下的依赖 npm 会和其他包的依赖进行全集计算，使安装的包尽可能少。\n\n如果写的是某个库的或框架的插件，还有一种 dependencies 类型是 peerDependencies，应该在 peerDependencies 中写一份，再在 devDependencies 写一份。具体的原因参考[开发组件库时 Vue 应该放哪儿](https://cnodejs.org/topic/5819624a1a9a7d9909531395)\n\n## 常用命令\n\n`npm init`: 初始化 package.json 文件，根据提示输入一些关键信息就可以将文件初始化完成。\n\n`npm install`: 安装依赖包。\n\n`npm ls -g`: 查看所有全局安装的模块。如果你不想看到那么多层的依赖，那就加个参数吧：`sudo npm ls -g --depth 0`。\n\n`npm prune`: 如果你的 node_modules 目录中已经安装了一个 package，但是package.json 中并没有对该 package 做依赖，那么这个 package 就应该被删除。这时如果执行npm ls命令则指示有一个 “npm ERR! extraneous: ...”。为了清理代码，你需要执行npm prune。\n\n`npm uninstall <package-name>`: 卸载包。\n\n`npm root -g`: 查看全局安装路径。\n\n`npm link`: 将当前包链接到全局，方便地对当前包进行调试和测试。\n\n## 多版本 node 管理\n\n在维护一些老项目的时候，一些工具依赖于某一版本的 node 才能运行起来，这就需要在不同的版本之间来回切换，这时你需要一个多版本管理工具 `n`，没错这个工具的名字就这么简短，只有一个字母，下面是使用方法：\n\n```shell\n// 安装多版本管理工具\nsudo npm install -g n\n// 安装6.0.0版本的 node\nn 6.0.0\n// 查看和切换 node 版本，上下键选版本，回车确定\nn\n// 移除某一版本\nn rm 6.0.0\n```\n\n另外你可以直接打开文件夹查看 node 的版本，也可以直接删除某一版本的 node(因为经常会出现安装失败的情况所以需要删除后重装)\n\n```shell\n/usr/local/n/versions/node\n```\n\nnode 版本的偶数版是稳定版，使用 `n ls` 可以查看全部发布过的 node 版本，下面是一些关键的版本：\n\n```shell\n0.0.1    // 里程碑的起点\n0.1.104  // 0.1 版本的最后一个版本\n0.12.12  // 这一版本的工具很多，很多没有持续维护的工具都对此版本有强依赖\n4.0.0    // node 和 io 合并直接跳到 io 的下一个非兼容版本\n4.4.4\n5.11.0\n6.0.0\n7.0.0\n8.0.0\n```\n\n关于版本管理，可以查看我的另一篇博客 [语义化版本](/index.html#!/articles/semantic-versioning)。\n\n## 常见问题\n\n### 缺 package.json 文件\n\n`npm ERR! registry error parsing json` 填写了 `--save` 或者 `--save-dev` 参数但是当前位置没有 package.json 文件，需要先执行 `npm init`；\n\n### 依赖安装失败\n\n国内环境受到墙的影响，可能安装缓慢，也可能大面积安装失败，如果大面积安装失败可以尝试 `cnpm` 这样的国内镜像，或者翻墙。个别安装失败会在安装或运行的时候提示某个包找不到，这时需要单独安装缺失的包，npm 2.0 之后依赖的依赖不会放在依赖下面的 node_modules，而是会放在依赖的同级，所以只要在项目路径下安装缺失的包就可以。如果以上方法都不行，先去喝杯咖啡回来可能就可以装上了...\n\n### 依赖变更\n\n锁定依赖版本防止被人上房抽梯，由 left-pad 引发的思考。如果某个包不遵守开原版本规范，有了不兼容升级却只改了一个小版本，npm 平台并不限制这种行为，但是 npm 是不允许修改已发布版本的，所以版本锁定是一个较为稳妥的方案。\n\n### 引用逻辑\n\n先说一下定义文件的读取规则：\n\n- .js;\n- 文件夹，读取 package.json 的 main 设置，然后根据设置引用文件;\n- 文件夹，读取不到 package.json 的直接引用 index.js;\n- 注意 .json 并不能直接被包引用识别。\n\n自定义文件像这样引用 `import packageName from './package-path`，依赖包的引用像这样`import packageName from 'package-name`。依赖包的引用规则：\n\n- 先找缓存中是否有;\n- 然后当先项目下的 node_modules 文件夹下，如果找到了添加到缓存下;\n- 项目上一层目录的 node_modules，如果找到了添加到缓存下。\n\nES6 与 CommonJs 的引用略有不同，具体参考我的另一篇学习笔记[ ES6 学习笔记 - Part 3](/index.html#!/articles/es6-3)。\n\n### permission denied\n\n`Error: EACCES: permission denied` 这段报错也是较为常见的，尤其是一些不太出名的需要全局安装的包，在执行的时候可能会报这个错，直译就是“许可被拒绝”，也就是文件权限的问题，最简单粗暴的方法就是把 node_modules 的权限改成 777，污染小一点的方案是改单个工具的文件所属。比如我遇到的问题是公司全家桶 yog2，可以这样\n\n```shell\nsudo chown -R $USER /usr/local/lib/node_modules/yog2\n```\n\n再补充一下前端工具经常用的的路径：\n\n```shell\n// node 全局命令的入口\n/usr/local/bin\n// 全局 node_modules路径\n/usr/local/lib/node_modules\n```\n\n## 发布一个包\n\n首先去 [npm 官网](https://www.npmjs.com/)注册账户;\n    \n然后登录\n\n```shell\nnpm login\n```\n\n最后发布\n\n```\nsudo npm publish\n```\n\n实测我开发的一个中间件 `koa-auto-path-router` 从发布到可以搜到只需要 3 分钟。如果要发布新版本记得手动修改 package.json 中的版本号。发布后在项目中的更新命令：\n\n```shell\nnpm update <package name>\n```\n\n删除一个包\n\n```shell\nnpm --force unpublish 包名\n```\n\n查看其它配置:\n\n```shell\nnpm config ls -l\n// 查看当前用户\nnpm whoami\n```\n\n退出登录\n\n```shell\n    npm logout\n```\n\n有一次发布包的时候遇到个小问题，报错信息如下：\n\n```shell\n    npm ERR! you must verify your email before publishing a new package: https://www.npmjs.com/email-edit :\n```\n\n首先包中配置的邮箱要和 npm 账户中的邮箱要匹配，如果邮箱改变了需要重新验证，npm 会发验证邮件到邮箱，你需要点一下。有段时间翻墙有点问题，发现配 gmail 死活 publish 不上去，后来换成 163 邮箱就上去了。\n\n## 收集常用的包\n\n### 浏览器端、客户端\n\n- js-cookie 浏览器端操作 cookie\n- clipboard 复制，支持 IE9+\n\n### 服务端、CLI\n\n- consolidate，集成模板引擎；\n\n- chalk，命令行高亮；\n\n- commander，命令行辅助，TJ 大神的库。还有更简单的库 -- yargs；\n\n- inquirer，收集用户输入，支持单选，多选，文本输入，密码输入，更具前面输入判断是否展示当前项，校验，加工输入；\n\n- download-git-repo，下载远程仓库。容易被忽略的一点就是带了 ssh 的功能，可以用来从私有库下载，回调函数执行的时候文件没有被保存到本地硬盘，可以在回调函数中加工下载文件；\n\n- metalsmith，构建静态网站的工具，每一个加工的工序就是一个插件；\n\n## 参考资料\n\n[官方文档](https://docs.npmjs.com)\n\n[package.json 的官方说明](https://github.com/npm/npm/blob/2e3776bf5676bc24fec6239a3420f377fe98acde/doc/files/package.json.md)\n\n[What's the difference between dependencies, devDependencies and peerDependencies in npm package.json file?](http://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies)\n\n[开发组件库时 Vue 应该放哪儿：devDependencies or peerDependencies？](https://cnodejs.org/topic/5819624a1a9a7d9909531395)\n\t\n[记npm包开发全过程](http://www.w2bc.com/Article/86039)\t\n","tags":["个人笔记","技术点","工程"]}
[2018-11-22T17:32:21.220] [TRACE] default - auth userRequired, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:POST
[2018-11-22T17:34:20.116] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:42:37.341] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-22T17:42:43.689] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:07:25.846] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:07:44.670] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:07:45.406] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:08:27.319] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:08:32.817] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:08:33.952] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:09:37.545] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:09:38.587] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:15:26.644] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:16:53.421] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:17:20.181] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:17:20.974] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:17:25.608] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:17:26.320] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:20:14.651] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:20:44.775] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:20:45.592] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:20:48.198] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:20:48.851] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:22:07.989] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:22:09.020] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:22:10.722] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:22:11.511] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:23:33.562] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:23:34.373] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:24:21.674] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:24:22.380] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:24:24.627] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:24:25.334] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:26:17.666] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:26:18.207] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:26:19.665] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:26:20.209] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:26:20.933] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:26:21.358] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:26:22.194] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:26:22.560] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:26:23.294] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:26:23.726] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:26:24.346] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:26:24.700] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:26:26.738] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:26:27.183] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:27:28.393] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:27:28.967] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:27:30.345] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:27:30.849] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:27:33.788] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:27:34.650] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:30:59.199] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:31:00.298] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:02.223] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:31:03.294] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:07.324] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:31:07.887] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:09.356] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:31:09.829] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:11.336] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:31:11.746] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:29.141] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-11-24T20:31:29.235] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:31:29.752] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:34.925] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:31:35.317] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:36.959] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:31:38.113] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:31:38.614] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:41.920] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:31:42.358] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:31:46.058] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-11-24T20:31:46.059] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-11-24T20:31:46.060] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-11-24T20:31:47.651] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-11-24T20:31:47.651] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-11-24T20:31:47.652] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-11-24T20:31:48.005] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:32:14.284] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-11-24T20:32:14.284] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-11-24T20:32:14.285] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-11-24T20:32:14.857] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:32:16.372] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-11-24T20:32:16.372] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-11-24T20:32:16.374] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-11-24T20:32:16.849] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:33:45.470] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-11-24T20:33:45.470] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-11-24T20:33:45.472] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-11-24T20:33:46.036] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:33:47.434] [TRACE] default - API request, URL:/api/users, method:GET, body:{}
[2018-11-24T20:33:47.435] [TRACE] default - auth adminRequired, URL:/api/users, method:GET
[2018-11-24T20:33:47.436] [TRACE] default - auth adminRequired pass, URL:/api/users, method:GET
[2018-11-24T20:33:47.916] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:33:50.062] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:33:51.287] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:33:51.686] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:33:52.944] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:33:53.358] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:33:56.927] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:33:57.729] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:34:17.695] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:36:49.089] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:36:49.970] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:36:51.994] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:36:52.793] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:36:54.816] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-24T20:36:55.384] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-24T20:41:05.868] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:41:17.422] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-24T20:41:25.736] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-11-25T15:24:23.354] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T15:24:29.213] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-25T15:24:29.233] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2018-11-25T15:43:41.080] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T15:43:41.873] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-25T15:43:44.748] [TRACE] default - API request, URL:/api/articles, method:POST, body:{}
[2018-11-25T15:43:44.749] [TRACE] default - auth userRequired, URL:/api/articles, method:POST
[2018-11-25T15:43:45.465] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T15:43:45.516] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-25T15:44:16.374] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# 标题\n\n> 描述\n\n## 二级标题\n\n段落内容\n\n## 参考\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-25T15:44:16.374] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-25T15:57:30.450] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T15:57:33.764] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T15:57:33.848] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-25T16:00:36.656] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 二级标题\n\n段落内容\n\n## 参考\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-25T16:00:36.656] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-25T16:01:18.969] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n### 折行\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-25T16:01:18.969] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-25T16:05:54.505] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n### 折行\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-25T16:05:54.506] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-25T21:39:26.571] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n### 折行\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-25T21:39:26.571] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-25T21:50:06.559] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T21:50:07.745] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-25T21:50:08.244] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T21:50:08.292] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-25T21:50:14.358] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T22:05:48.235] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-25T22:05:48.400] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T22:05:48.501] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-25T22:05:48.504] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T22:05:51.813] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T22:05:58.744] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T22:06:06.542] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T22:06:08.026] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T22:06:26.921] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-25T22:10:48.274] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-11-25T22:12:46.697] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T17:58:50.451] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T17:59:22.976] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-26T17:59:27.288] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2018-11-26T17:59:28.135] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-26T17:59:28.227] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T17:59:28.330] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-26T18:01:57.270] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T18:01:57.374] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-26T18:03:07.494] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 折行\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-26T18:03:07.494] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-26T18:05:02.505] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 折行\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-26T18:05:02.505] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-26T18:05:06.167] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:07:42.244] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:07:47.636] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:13:53.894] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:15:07.388] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:16:50.089] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:29:30.980] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n这可能是副作用最小的一种方案了：\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 折行\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-26T21:29:30.980] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-26T21:36:36.881] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n这可能是兼容性最好副作用最小的一种方案了：\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-26T21:36:36.881] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-26T21:36:42.452] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-26T21:36:42.727] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:36:42.840] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-26T21:36:48.259] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:36:50.932] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:37:24.211] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n这可能是兼容性最好副作用最小的一种方案了：\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n### 多行文字超出截断\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-26T21:37:24.211] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-26T21:37:38.867] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:38:36.532] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-26T21:39:01.022] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T10:14:38.811] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T10:32:43.486] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n兼容 IE8 及以上。\n\n### 多行文字超出截断\n\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T10:32:43.488] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T10:32:48.855] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T10:33:37.995] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n移动版方案：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n\n兼容 IE8 及以上。\n\n### 多行文字超出截断\n\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T10:33:37.995] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T10:35:14.569] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T10:36:16.441] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T10:38:59.884] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断\n\n移动版方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T10:38:59.884] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T10:46:48.051] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断\n\n移动版方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T10:46:48.052] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T10:46:52.032] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T10:54:54.743] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-27T10:54:55.000] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T10:54:55.237] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-27T11:15:51.662] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\nPC 端方案：\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T11:15:51.662] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T11:16:13.972] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\nPC 端方案：\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T11:16:13.972] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T11:34:52.754] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\nPC 端方案：\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T11:34:52.755] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T11:34:57.448] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T11:43:09.254] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T11:43:09.256] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T11:45:58.245] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T11:45:58.780] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T11:46:33.562] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T11:47:33.480] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T14:42:50.612] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T14:43:01.384] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T14:43:53.885] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T14:44:18.101] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T14:55:18.897] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T15:11:16.131] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T15:11:16.131] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T15:11:20.483] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T15:25:50.113] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-27T15:32:00.077] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n## 布局\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-27T15:32:00.077] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-27T15:32:03.657] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T11:19:44.534] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T11:19:48.473] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-28T11:19:48.847] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T11:19:49.055] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-28T11:19:50.784] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:27:52.822] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n\n### 大图小字\n\n支持 IE8+，如果文字可能隐藏搭配清除浮动更稳定。\n\n```css\n.img-text-container {\n    padding: 2px 10px;\n    border-radius: 5px;\n    font-size: 16px;\n    line-height: 28px;\n    background: rgba(120, 120, 120, .3);\n}\n.img-text-container::before,\n.img-text-container img {\n    margin-right: 5px;\n    font-size: 28px;\n    float: left;\n}\n```\n\n图片采用浮动是比较稳定，还有一个附带的好处是避免换行产生的不稳定间距。\n\n### 小图大字\n\n### 数据为空&暂无权限\n\n### 文字间隔\n\n## 布局\n\n### 信息单元样式一\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-28T14:27:52.824] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-28T14:27:56.182] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:51:21.687] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:51:52.703] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:55:23.196] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:55:25.094] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:56:15.308] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:57:21.130] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T14:57:37.431] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T15:04:05.749] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T15:06:52.712] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T18:00:35.813] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T18:01:13.339] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-28T18:02:09.454] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T10:35:40.986] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-29T10:35:41.485] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T10:35:41.677] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-11-29T10:36:15.367] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T10:37:47.567] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T11:14:18.447] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T11:17:51.321] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T12:40:50.694] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:03:38.085] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:07:05.813] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:14:20.267] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:19:39.557] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:20:53.543] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:33:23.668] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n### 数据为空&暂无权限\n\n### 文字间隔\n\n## 布局\n\n### 信息单元样式一\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-29T15:33:23.668] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-29T15:34:14.311] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:34:35.035] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n### 数据为空&暂无权限\n\n### 文字间隔\n\n## 布局\n\n### 信息单元样式一\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-29T15:34:35.035] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-29T15:34:37.691] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T15:57:32.466] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T16:13:22.787] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 数据为空&暂无权限\n\n### 文字间隔\n\n## 布局\n\n### 信息单元样式一\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-29T16:13:22.787] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-29T16:13:27.378] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T17:27:56.054] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T17:31:03.534] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T17:44:27.299] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T17:46:19.946] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-29T17:55:11.594] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 数据为空&暂无权限\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n## 布局\n\n### 信息单元样式一\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-11-29T17:55:11.594] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-11-29T17:55:16.690] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-30T21:27:51.373] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-30T21:27:52.409] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-11-30T21:27:52.915] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-11-30T21:27:53.396] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-12-01T20:48:14.240] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T20:49:17.831] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T20:50:05.672] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T20:51:29.598] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T21:05:32.726] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T21:07:53.540] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n## 布局\n\n### 信息单元样式一\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-01T21:07:53.541] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-01T21:07:57.139] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T21:10:09.990] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T21:26:09.883] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-12-01T21:26:10.177] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T21:26:10.503] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-12-01T21:27:39.878] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-01T21:32:06.363] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T10:50:10.241] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T10:50:15.249] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T10:50:25.390] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T10:50:48.411] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-12-02T10:51:32.428] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-12-02T10:52:10.117] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-12-02T10:52:10.497] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T10:52:10.589] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T10:52:11.365] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-12-02T11:13:02.966] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n支持 IE8+\n\n```css\n.no-right,\n.data-empty {\n    text-align: center;\n    padding: 50px 0;\n    color: #555;\n}\n.icon-no-right:before,\n.icon-empty:before {\n    display: block;\n    margin: 0 auto;\n    font-size: 48px;\n    margin-bottom: 10px;\n}\n```\n\n常用样式，需要引入相应的 iconfont 图标。\n\n### 加载中\n\n兼容IE9+\n\n从网站 [http://tobiasahlin.com/spinkit/](http://tobiasahlin.com/spinkit/) 中摘取的一个样式。使用简单，只有一个元素。\n\n```css\n.loading {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n}\n.loading::before,\n.loading::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: .6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n}\n.loading::after {\n    animation-delay: -1.0s;\n}\n```\n\n## 布局\n\n### 信息单元样式一\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-02T11:13:02.967] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-02T11:13:25.799] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T11:13:28.542] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T16:03:57.363] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-02T16:03:58.328] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-12-02T16:06:30.343] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T11:25:28.018] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T14:32:29.399] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-12-04T14:32:29.550] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T14:32:29.730] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-12-04T15:01:26.861] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n支持 IE8+\n\n```css\n.no-right,\n.data-empty {\n    text-align: center;\n    padding: 50px 0;\n    color: #555;\n}\n.icon-no-right:before,\n.icon-empty:before {\n    display: block;\n    margin: 0 auto;\n    font-size: 48px;\n    margin-bottom: 10px;\n}\n```\n\n常用样式，需要引入相应的 iconfont 图标。\n\n### 加载中\n\n兼容IE9+\n\n从网站 [http://tobiasahlin.com/spinkit/](http://tobiasahlin.com/spinkit/) 中摘取的一个样式。使用简单，只有一个元素。\n\n```css\n.loading {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n}\n.loading::before,\n.loading::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: .6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n}\n.loading::after {\n    animation-delay: -1.0s;\n}\n```\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-04T15:01:26.862] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-04T15:01:29.321] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T15:05:55.340] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n支持 IE8+\n\n```css\n.no-right,\n.data-empty {\n    text-align: center;\n    padding: 50px 0;\n    color: #555;\n}\n.icon-no-right:before,\n.icon-empty:before {\n    display: block;\n    margin: 0 auto;\n    font-size: 48px;\n    margin-bottom: 10px;\n}\n```\n\n常用样式，需要引入相应的 iconfont 图标。\n\n### 加载中\n\n兼容IE9+\n\n从网站 [http://tobiasahlin.com/spinkit/](http://tobiasahlin.com/spinkit/) 中摘取的一个样式。使用简单，只有一个元素。\n\n```css\n.loading {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n}\n.loading::before,\n.loading::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: .6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n}\n.loading::after {\n    animation-delay: -1.0s;\n}\n```\n\n## 补充\n\n### 字体\n\nHelvetica，无衬线字，字母 I l，可能是设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下显示很糟糕。\n\n苹方 PingFang SC，无衬线，字母 I l，美观大于实用。\n\n大河马 tahoma，无衬线，字母 I l，中英文混排推荐，XP 时代的微软默认字体，字体界的老炮。\n\nsans-serif，无衬线，字母 I l，大河马的备胎。\n\n微软雅黑 Microsoft Yahei，无衬线，字母 I l，Windows7+ 时代的微软默认字体，同样字号情况下微软雅黑的字要大一点。\n\nfont: 14px/1.5 Helvetica \"PingFang SC\", tahoma, arial, sans-serif;\n\n- 如果是对设计感有需求的网站或App，用 Helvetica 和 \"PingFang SC\" 打头是不错的选择；\n- 如果是中规中矩的网站或App，用 tahoma 做主打，arial 和 sans-serif 娄底是不错的选择；\n- 微软雅黑是收费字体，Mac 也提供，如果是 PC 可以考虑用微软雅黑，如果有 Android 场景那就不要用了。\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-04T15:05:55.341] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-04T15:05:58.642] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T15:08:04.819] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 字体\n\nHelvetica，无衬线字，字母 I l，可能是设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下显示很糟糕。\n\n苹方 PingFang SC，无衬线，字母 I l，美观大于实用。\n\n大河马 tahoma，无衬线，字母 I l，中英文混排推荐，XP 时代的微软默认字体，字体界的老炮。\n\nsans-serif，无衬线，字母 I l，大河马的备胎。\n\n微软雅黑 Microsoft Yahei，无衬线，字母 I l，Windows7+ 时代的微软默认字体，同样字号情况下微软雅黑的字要大一点。\n\nfont: 14px/1.5 Helvetica \"PingFang SC\", tahoma, arial, sans-serif;\n\n- 如果是对设计感有需求的网站或App，用 Helvetica 和 \"PingFang SC\" 打头是不错的选择；\n- 如果是中规中矩的网站或App，用 tahoma 做主打，arial 和 sans-serif 娄底是不错的选择；\n- 微软雅黑是收费字体，Mac 也提供，如果是 PC 可以考虑用微软雅黑，如果有 Android 场景那就不要用了。\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n支持 IE8+\n\n```css\n.no-right,\n.data-empty {\n    text-align: center;\n    padding: 50px 0;\n    color: #555;\n}\n.icon-no-right:before,\n.icon-empty:before {\n    display: block;\n    margin: 0 auto;\n    font-size: 48px;\n    margin-bottom: 10px;\n}\n```\n\n常用样式，需要引入相应的 iconfont 图标。\n\n### 加载中\n\n兼容IE9+\n\n从网站 [http://tobiasahlin.com/spinkit/](http://tobiasahlin.com/spinkit/) 中摘取的一个样式。使用简单，只有一个元素。\n\n```css\n.loading {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n}\n.loading::before,\n.loading::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: .6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n}\n.loading::after {\n    animation-delay: -1.0s;\n}\n```\n\n## 补充\n\n### 字体\n\nHelvetica，无衬线字，字母 I l，可能是设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下显示很糟糕。\n\n苹方 PingFang SC，无衬线，字母 I l，美观大于实用。\n\n大河马 tahoma，无衬线，字母 I l，中英文混排推荐，XP 时代的微软默认字体，字体界的老炮。\n\nsans-serif，无衬线，字母 I l，大河马的备胎。\n\n微软雅黑 Microsoft Yahei，无衬线，字母 I l，Windows7+ 时代的微软默认字体，同样字号情况下微软雅黑的字要大一点。\n\nfont: 14px/1.5 Helvetica \"PingFang SC\", tahoma, arial, sans-serif;\n\n- 如果是对设计感有需求的网站或App，用 Helvetica 和 \"PingFang SC\" 打头是不错的选择；\n- 如果是中规中矩的网站或App，用 tahoma 做主打，arial 和 sans-serif 娄底是不错的选择；\n- 微软雅黑是收费字体，Mac 也提供，如果是 PC 可以考虑用微软雅黑，如果有 Android 场景那就不要用了。\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-04T15:08:04.819] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-04T15:08:07.277] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T15:09:01.119] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 字体\n\nHelvetica，无衬线字，字母 I l，可能是设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下显示很糟糕。\n\n苹方 PingFang SC，无衬线，字母 I l，美观大于实用。\n\n大河马 tahoma，无衬线，字母 I l，中英文混排推荐，XP 时代的微软默认字体，字体界的老炮。\n\nsans-serif，无衬线，字母 I l，大河马的备胎。\n\n微软雅黑 Microsoft Yahei，无衬线，字母 I l，Windows7+ 时代的微软默认字体，同样字号情况下微软雅黑的字要大一点。\n\n```css\nfont: 14px/1.5 Helvetica \"PingFang SC\", tahoma, arial, sans-serif;\n```\n\n- 如果是对设计感有需求的网站或App，用 Helvetica 和 \"PingFang SC\" 打头是不错的选择；\n- 如果是中规中矩的网站或App，用 tahoma 做主打，arial 和 sans-serif 娄底是不错的选择；\n- 微软雅黑是收费字体，Mac 也提供，如果是 PC 可以考虑用微软雅黑，如果有 Android 场景那就不要用了。\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n支持 IE8+\n\n```css\n.no-right,\n.data-empty {\n    text-align: center;\n    padding: 50px 0;\n    color: #555;\n}\n.icon-no-right:before,\n.icon-empty:before {\n    display: block;\n    margin: 0 auto;\n    font-size: 48px;\n    margin-bottom: 10px;\n}\n```\n\n常用样式，需要引入相应的 iconfont 图标。\n\n### 加载中\n\n兼容IE9+\n\n从网站 [http://tobiasahlin.com/spinkit/](http://tobiasahlin.com/spinkit/) 中摘取的一个样式。使用简单，只有一个元素。\n\n```css\n.loading {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n}\n.loading::before,\n.loading::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: .6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n}\n.loading::after {\n    animation-delay: -1.0s;\n}\n```\n\n## 补充\n\n### 字体\n\nHelvetica，无衬线字，字母 I l，可能是设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下显示很糟糕。\n\n苹方 PingFang SC，无衬线，字母 I l，美观大于实用。\n\n大河马 tahoma，无衬线，字母 I l，中英文混排推荐，XP 时代的微软默认字体，字体界的老炮。\n\nsans-serif，无衬线，字母 I l，大河马的备胎。\n\n微软雅黑 Microsoft Yahei，无衬线，字母 I l，Windows7+ 时代的微软默认字体，同样字号情况下微软雅黑的字要大一点。\n\nfont: 14px/1.5 Helvetica \"PingFang SC\", tahoma, arial, sans-serif;\n\n- 如果是对设计感有需求的网站或App，用 Helvetica 和 \"PingFang SC\" 打头是不错的选择；\n- 如果是中规中矩的网站或App，用 tahoma 做主打，arial 和 sans-serif 娄底是不错的选择；\n- 微软雅黑是收费字体，Mac 也提供，如果是 PC 可以考虑用微软雅黑，如果有 Android 场景那就不要用了。\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-04T15:09:01.120] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-04T15:09:09.756] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T15:09:24.067] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 字体\n\nHelvetica，无衬线字，字母 I l，可能是设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下显示很糟糕。\n\n苹方 PingFang SC，无衬线，字母 I l，美观大于实用。\n\n大河马 tahoma，无衬线，字母 I l，中英文混排推荐，XP 时代的微软默认字体，字体界的老炮。\n\nsans-serif，无衬线，字母 I l，大河马的备胎。\n\n微软雅黑 Microsoft Yahei，无衬线，字母 I l，Windows7+ 时代的微软默认字体，同样字号情况下微软雅黑的字要大一点。\n\n```css\nfont: 14px/1.5 Helvetica \"PingFang SC\", tahoma, arial, sans-serif;\n```\n\n- 如果是对设计感有需求的网站或App，用 Helvetica 和 \"PingFang SC\" 打头是不错的选择；\n- 如果是中规中矩的网站或App，用 tahoma 做主打，arial 和 sans-serif 娄底是不错的选择；\n- 微软雅黑是收费字体，Mac 也提供，如果是 PC 可以考虑用微软雅黑，如果有 Android 场景那就不要用了。\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n支持 IE8+\n\n```css\n.no-right,\n.data-empty {\n    text-align: center;\n    padding: 50px 0;\n    color: #555;\n}\n.icon-no-right:before,\n.icon-empty:before {\n    display: block;\n    margin: 0 auto;\n    font-size: 48px;\n    margin-bottom: 10px;\n}\n```\n\n常用样式，需要引入相应的 iconfont 图标。\n\n### 加载中\n\n兼容IE9+\n\n从网站 [http://tobiasahlin.com/spinkit/](http://tobiasahlin.com/spinkit/) 中摘取的一个样式。使用简单，只有一个元素。\n\n```css\n.loading {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n}\n.loading::before,\n.loading::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: .6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n}\n.loading::after {\n    animation-delay: -1.0s;\n}\n```\n\n\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-04T15:09:24.067] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-04T15:09:26.775] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-04T15:10:20.697] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST, body:{"mdContent":"# CSS Widget\n\n> 零零总总写前端 5 年多了，几乎任何业务项目都需要用到一些样式片段，功能复杂的已经被抽象成了组件库，还有一些只有几行十几行的样式片段却在不断的重复编码，决定花时间整理一些这个类型的片段，利人利己。\n\n## 辅助功能\n\n### 字体\n\nHelvetica，无衬线字，字母 I l，可能是设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下显示很糟糕。\n\n苹方 PingFang SC，无衬线，字母 I l，美观大于实用。\n\n大河马 tahoma，无衬线，字母 I l，中英文混排推荐，XP 时代的微软默认字体，字体界的老炮。\n\nsans-serif，无衬线，字母 I l，大河马的备胎。\n\n微软雅黑 Microsoft Yahei，无衬线，字母 I l，Windows7+ 时代的微软默认字体，同样字号情况下微软雅黑的字要大一点。\n\n```css\nfont: 14px/1.5 Helvetica \"PingFang SC\", tahoma, arial, sans-serif;\n```\n\n- 如果是对设计感有需求的网站或App，用 Helvetica 和 \"PingFang SC\" 打头是不错的选择；\n- 如果是中规中矩的网站或App，用 tahoma 做主打，arial 和 sans-serif 娄底是不错的选择；\n- 微软雅黑是收费字体，Mac 也提供，如果是 PC 可以考虑用微软雅黑，如果有 Android 场景那就不要用了。\n\n### 清除浮动\n\n```css\n/* 清除浮动 */\n.c-f,\n.clear-float {\n    zoom: 1; /* 兼容IE7及以下 */\n}\n.c-f:after,\n.clear-float:after {\n    content: \"\\200B\";\n    display: block;\n    height: 0;\n    clear: both;\n}\n```\n\n这可能是兼容性最好副作用最小的一种方案了。理论部分可以看看“一丝冰凉”的这篇文章：\n[那些年我们一起清除过的浮动](http://www.iyunlu.com/view/css-xhtml/55.html)\n\n### 单行文字超出截断\n\n兼容 IE8 及以上：\n```css\n.text-overflow-ellipsis,\n.ellipsis {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n```\n### 多行文字超出截断【移动】\n\n移动端方案，只兼容 webkit 内核的浏览器：\n```css\n.line-clamp {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n}\n```\n\n-webkit-line-clamp 是一个不规范的属性，它没有出现在 CSS 规范草案中。也就是说只有 webkit 内核的浏览器才支持这个属性，像 Firefox, IE 浏览器统统都不支持这个属性，浏览器兼容性不好。\n\n使用场景：多用于移动端页面，因为移动设备浏览器更多是基于 webkit 内核。\n\n### 多行文字超出截断【PC】\n\n```css\n.wrap {\n    height: 40px;\n    line-height: 20px;\n    overflow: hidden;\n}\n.wrap .text {\n    float: right;\n    margin-left: -5px;\n    width: 100%;\n    word-break: break-all;\n}\n.wrap::before {\n    float: left;\n    width: 5px;\n    content: '';\n    height: 40px;\n}\n.wrap::after {\n    float: right;\n    content: \"...\";\n    height: 20px;\n    line-height: 20px;\n    /* 为三个省略号的宽度 */\n    width: 3em;\n    /* 使盒子不占位置 */\n    margin-left: -3em;\n    /* 移动省略号位置 */\n    position: relative;\n    left: 100%;\n    top: -20px;\n    padding-right: 5px;\n}\n```\n真是一个无比巧妙的方案，原理部分参见这篇文章：[https://github.com/happylindz/blog/issues/12](https://github.com/happylindz/blog/issues/12)。\n\n\n这里的多行是需要通过高度和行高配合实现的，省略号的背景默认是白色如果容器是其他背景色需要手动重置。如果你需要边框需要手动设置伪元素的高度，或者使用 outline 来代替 border。\n\n```css\n.wrap::before {\n    height: 40px;\n}\n```\n\nline-clamp 属性还不是标准，还有一个 js 库可以考虑：[https://github.com/josephschmitt/Clamp.js](https://github.com/josephschmitt/Clamp.js)\n\n## 独立样式\n\n### 大图小字\n\n支持 IE8+\n\n```css\n.img-text-container {\n    font-size: 16px;\n    line-height: 40px;\n}\n.img-text-container img,\n.img-text-container::before {\n    font-family: \"iconfont\";\n    margin-right: 5px;\n    font-size: 40px;\n    height: 40px;\n    vertical-align: top;\n}\n```\n\n将图片或图标的 `vertical-align` 设置成 `top` 是关键。需要注意的有两点：\n- 1、图和字中间会有间隔，采用浮动方案可消除间距同时带来浮动产生副作用；\n- 2、文字的行高需要和图的高度一致。\n\n### 小图大字\n\n支持 IE8+\n\n```css\n.icon-text-container {\n    font-size: 16px;\n    line-height: 1em;\n}\n.icon-text-container img {\n    display: inline-block;\n    height: 14px;\n    margin-right: 5px;\n    // 高度的一半\n    margin-bottom: -7px;\n    vertical-align: 32%;\n}\n.icon-text-container::before {\n    display: inline-block;\n    font-family: \"iconfont\";\n    font-size: 14px;\n    color: #555;\n    vertical-align: top;\n}\n```\n\n多用于装饰性的小图标。这里的关键在于 `vertical-align: 32%;` 这个设置，之母 x 的高度占整个行高的一半，如果 `vertical-align` 的值是百分数，那么相对值就是行高，参考点就是字母 x 的下边沿，字母 x 的高度刚好占到行高的一半，所以 `25%` 的相对值设置会使图片的下边沿正好在字母 x 的垂直中线上，字母 x 位于一行偏下一点，上下的距离比实际测量大概是 16:9，然后 (16-9)/(16+9) 刚好是 28%，再取一半的一半刚好是 7%，于是 25% + 7% = 32%。\n\n对于图片同样有两点需要注意：\n- 1、容器行高必须是一倍字号，如果需要间距通过 `padding` 设置；\n- 2、图片的 `margin-bottom` 必须是图片高度的一半取负。\n\n对图标要简单很多，只要自动继承容器的单倍行高然后这是 `vertical-align: top` 就可以了。\n\n### 文字间隔\n\n多个标签之间间隔一个字符是常用的样式，字符 | 会因为字体的不同无法居中无法控制高度等问题，我们用伪元素画一个：\n\n```css\n.space-item {\n    display: inline-block;\n    line-height: 1em;\n}\n.space-item:nth-of-type(n + 2)::before {\n    content: \"\\200B\";\n    display: inline-block;\n    height: 0.15em;\n    width: 1px;\n    border-bottom: 0.7em solid #f00;\n    margin: 0 0.5em;\n}\n```\n\n这段代码的的第一个妙处在于用 `border-bottom` 画间距线，而用高度作为上间距(用 padding 会有问题)；第二个妙处在于用了关系选择器，不需要手动去指定哪一个有间隔符。\n\n### 数据为空&暂无权限\n\n支持 IE8+\n\n```css\n.no-right,\n.data-empty {\n    text-align: center;\n    padding: 50px 0;\n    color: #555;\n}\n.icon-no-right:before,\n.icon-empty:before {\n    display: block;\n    margin: 0 auto;\n    font-size: 48px;\n    margin-bottom: 10px;\n}\n```\n\n常用样式，需要引入相应的 iconfont 图标。\n\n### 加载中\n\n兼容IE9+\n\n从网站 [http://tobiasahlin.com/spinkit/](http://tobiasahlin.com/spinkit/) 中摘取的一个样式。使用简单，只有一个元素。\n\n```css\n.loading {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n}\n.loading::before,\n.loading::after {\n    content: '';\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: .6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: sk-bounce 2.0s infinite ease-in-out;\n}\n.loading::after {\n    animation-delay: -1.0s;\n}\n```\n","tags":["推荐","个人笔记","代码片段"]}
[2018-12-04T15:10:20.697] [TRACE] default - auth userRequired, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:POST
[2018-12-05T10:25:58.665] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-12-05T10:26:01.536] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-05T10:31:06.715] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-05T10:31:13.455] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
[2018-12-06T17:04:50.265] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-12-14T13:31:59.632] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-12-14T13:32:03.916] [TRACE] default - API request, URL:/api/articles/5bcd25b179c3ad11e869148e, method:GET, body:{}
[2018-12-14T13:32:12.696] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-12-14T13:32:28.561] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-12-14T13:32:28.864] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2018-12-14T13:32:34.333] [TRACE] default - API request, URL:/api/articles/5bd9b3b9394e86dbc97ea33e, method:GET, body:{}
[2018-12-14T13:32:34.426] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2018-12-14T13:32:40.791] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2018-12-14T13:32:45.306] [TRACE] default - API request, URL:/api/articles/5ba846753b87f77eabc46ec4, method:GET, body:{}
[2018-12-14T13:32:45.481] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2019-01-03T20:48:58.111] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-03T20:49:05.461] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2019-01-03T20:49:30.129] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-03T20:49:35.612] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-03T20:49:36.635] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2019-01-03T20:49:43.074] [TRACE] default - API request, URL:/api/users/signin, method:POST, body:{"name":"root","pwd":"root"}
[2019-01-03T20:49:43.153] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-03T20:49:44.247] [TRACE] default - API request, URL:/api/users/current, method:GET, body:{}
[2019-01-03T20:49:47.809] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2019-01-03T20:49:48.014] [TRACE] default - API request, URL:/api/tags, method:GET, body:{}
[2019-01-17T10:24:37.719] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-17T10:24:42.258] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2019-01-17T10:25:08.178] [TRACE] default - API request, URL:/api/articles/5b93c6f011c8d25125ba3aeb, method:GET, body:{}
[2019-01-17T10:27:24.450] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-20T22:48:41.075] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-20T22:49:16.698] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-20T22:51:11.992] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-20T22:51:18.496] [TRACE] default - API request, URL:/api/articles, method:GET, body:{}
[2019-01-20T22:51:40.962] [TRACE] default - API request, URL:/api/articles/5bfa52b0fdb7882d3efcacac, method:GET, body:{}
